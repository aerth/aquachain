#!/bin/bash
# from https://github.com/aquachain/aquachain
log(){
    if [ "$1" == "-t" ]; then
        shift
        while read line; do
            echo "grepcheck:       $line"
        done <<< "$@"
    elif [ "$1" == "-e" ]; then
        shift
        echo -e "grepcheck: $@"
    else
        echo "grepcheck: $@"
    fi
}
grepcheck() {
    local function_name=$1
    local replacement=$2
    local acceptable=0
    local found
    local count
    local warn_only=false
    if [ -n "$3" ]; then
        acceptable=$(($3))
    fi
    if [ -n "$4" ] && [ "$4" == "warn" ]; then
        warn_only=true
    fi
    found=$(grep -rn "${function_name}"'(' *.go */*.go */*/*.go */*/*/*.go */*/*/*/*.go */*/*/*/*/*.go | grep -v test)
    if [ -z "$found" ] && [ "$acceptable" -eq 0 ]; then
        log -e "No occurrences of $function_name found"
        return
    fi
    count=$(echo "$found" | wc -l)
    if [[ $count -gt $acceptable ]]; then
        log -t "$found" | head -n 20
        log "$function_name occurrences: $count"
        log "currently ${count} found, expected ${acceptable}"
        log found $count occurrences of $function_name
        log "ERR Use $replacement instead of $function_name ❌"
        if [ "$warn_only" == "true" ]; then
            return
        fi
        exit 1
    elif [[ $count -lt $acceptable ]]; then
        log grepcheck config can be updated: currently ${count} found, expected ${acceptable}
    fi
    log "$function_name occurrences: $count: OK ✅"
}

if [ -z "$(echo $2)" ]; then
    log -e "Usage: grepcheck <function_name> <replacement> <acceptable_count> [warn]"
    echo "args given: $@"
    exit 1
fi

grepcheck "$@"