// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 4byte_tracer.js (2.923kB)
// bigram_tracer.js (1.702kB)
// call_tracer.js (8.586kB)
// evmdis_tracer.js (4.184kB)
// noop_tracer.js (1.25kB)
// opcount_tracer.js (1.362kB)
// prestate_tracer.js (4.018kB)
// trigram_tracer.js (1.778kB)
// unigram_tracer.js (1.5kB)

package tracers

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __4byte_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xdd\x6f\xdb\x38\x12\x7f\xb6\xff\x8a\x39\xbf\xd4\x46\x65\x39\xfe\x48\xfc\x91\x6b\x01\x5f\x36\x6d\x03\x64\x93\x20\x76\x6f\x51\x1c\xee\x81\x26\x47\x16\x2f\x32\xa9\x23\x47\x76\xdc\x6c\xfe\xf7\xc3\x50\x52\x62\x67\x5b\xec\xed\x93\x24\x6a\xe6\x37\x5f\xbf\x99\x61\xaf\x07\x17\x36\xdf\x3b\xbd\x4e\x09\x06\x27\xfd\x09\x2c\x53\x04\xf1\xdf\x42\xc8\x54\x68\x03\xf3\x82\x52\xeb\x7c\xb3\xd7\x83\x65\xaa\x3d\x24\x3a\x43\xd0\x1e\x72\xe1\x08\x6c\x02\x74\x24\x9d\xe9\x95\x13\x6e\x1f\x37\x7b\xbd\x52\xe3\x07\x3f\x59\x3b\x71\x88\xe0\x6d\x42\x3b\xe1\x70\x06\x7b\x5b\x80\x14\x06\x1c\x2a\xed\xc9\xe9\x55\x41\x08\x9a\x40\x18\xd5\xb3\x0e\x36\x56\xe9\x64\xcf\x80\x9a\xa0\x30\x0a\x5d\x30\x4b\xe8\x36\xbe\xf6\xe1\xf3\xcd\x57\xb8\x46\xef\xd1\xc1\x67\x34\xe8\x44\x06\x77\xc5\x2a\xd3\x12\xae\xb5\x44\xe3\x11\x84\x87\x9c\x4f\x7c\x8a\x0a\x56\x01\x8e\x15\x3f\xb1\x2b\x8b\xca\x15\xf8\x64\x0b\xa3\x04\x69\x6b\x22\x40\x4d\x29\x3a\xd8\xa2\xf3\xda\x1a\x18\xd6\xa6\x2a\xc0\x08\xac\x63\x90\xb6\x20\x0e\xc0\x81\xcd\x59\xaf\x03\xc2\xec\x21\x13\xf4\xaa\xfa\xa7\xe9\x78\x8d\x5a\x81\x36\xc1\x48\x6a\x73\x04\x4a\x05\x71\xcc\x3b\x9d\x65\xb0\x42\x28\x3c\x26\x45\x16\x31\xd6\xaa\x20\xf8\xed\x6a\xf9\xe5\xf6\xeb\x12\xe6\x37\xdf\xe0\xb7\xf9\xfd\xfd\xfc\x66\xf9\xed\x1c\x76\x9a\x52\x5b\x10\xe0\x16\x4b\x28\xbd\xc9\x33\x8d\x0a\x76\xc2\x39\x61\x68\x0f\x36\x61\x84\x5f\x2f\xef\x2f\xbe\xcc\x6f\x96\xf3\x7f\x5c\x5d\x5f\x2d\xbf\x81\x75\xf0\xe9\x6a\x79\x73\xb9\x58\xc0\xa7\xdb\x7b\x98\xc3\xdd\xfc\x7e\x79\x75\xf1\xf5\x7a\x7e\x0f\x77\x5f\xef\xef\x6e\x17\x97\x31\x2c\x90\xbd\x42\xd6\xff\xf3\x8c\x27\xa1\x76\x0e\x41\x21\x09\x9d\xf9\x3a\x0f\xdf\x6c\x01\x3e\xb5\x45\xa6\x20\x15\x5b\x04\x87\x12\xf5\x16\x15\x08\x90\x36\xdf\xff\xdf\x25\x65\x2c\x91\x59\xb3\x0e\x31\xff\x84\x8a\x70\x95\x80\xb1\x14\x81\x47\x84\xbf\xa7\x44\xf9\xac\xd7\xdb\xed\x76\xf1\xda\x14\xb1\x75\xeb\x5e\x56\x82\xf9\xde\xc7\xb8\xc9\x88\xa3\xd5\x9e\x70\xe9\x84\x44\x07\x1e\x85\x93\x29\xfa\x10\x4a\xf8\xd1\xd5\x0a\x0d\xe9\x44\xa3\xf3\x11\x13\x14\xa4\xcd\x32\x94\xe4\xd9\xfe\x26\x08\xe6\xd6\x53\x37\x77\x56\xa2\xf7\xda\xac\x39\x6c\xb8\xa2\x23\x41\xd8\x20\xa5\x56\x79\x38\x80\x7b\x1b\x8b\xd7\xdf\xb1\xce\x85\x2f\xf2\xb2\x88\x4a\x90\x88\xc0\xdb\x10\x3b\x38\x64\x8a\xa1\x02\xaf\xd7\x46\x50\xe1\x30\xf4\xd1\x0a\x61\x23\x48\x32\xd1\xc5\x5a\x68\xe3\xe9\x0f\x80\x8c\x53\xd7\xe3\xf2\x51\x6c\xf2\x0c\x67\xfc\x0e\xf0\x11\x14\xae\x8a\x75\x4c\x9c\x82\xa5\x13\xc6\x0b\xc9\xc4\x6e\x43\xeb\xe4\x71\xd0\x1f\xe1\xe9\x74\x8c\xc3\x53\x25\x4e\x26\xc3\xb3\xe9\x20\x39\x1d\x4e\xce\xfa\xa3\x3e\x9e\x4d\x93\xd1\x18\xa7\xe3\xe1\x6a\x20\x4f\xcf\x70\x2c\x26\x27\xe3\xe1\xaa\x8f\xe2\x64\x92\xa8\xf1\xe9\xb8\x8f\x53\x85\xad\x08\x9e\x02\xb0\x9b\x41\xeb\x20\xd3\xad\xe7\x4e\x69\xfd\xa9\x7c\x00\x9c\x3c\x0e\xc6\x4a\x0e\xa6\x63\xec\xf6\x07\x93\x19\xf4\xa3\xd7\x3f\xc3\x89\x94\xa3\xc9\xb0\xdf\x3d\x99\xc1\xe0\xe0\xfc\x74\x30\x4a\x86\x93\xc9\xb4\x3b\x3d\x3b\x56\x10\x2a\x39\x9d\x26\xd3\x69\x77\x30\x79\x03\x25\x07\x93\xbe\xea\x4f\x91\xa1\xfa\xe5\xf1\x73\xf3\xa9\xd9\xe0\x61\xa3\x3c\x88\xf5\xda\xe1\x5a\x10\x96\x55\x0b\x1e\x87\x1f\x09\x0f\x8a\xb8\xd9\xe0\xf7\x19\x3c\x3d\x47\xcd\xa0\x23\x45\x96\x2d\xf7\x39\x73\x9a\x0a\x67\x3c\xbc\x4b\x44\xe6\xf1\x5d\xe0\x85\xb1\xa6\xcb\x02\x9e\x47\x47\xc0\xcb\x11\x1f\xba\xda\x28\x7c\x0c\x02\x7c\x94\x68\xe7\x89\xc7\xab\xd8\x04\x44\x91\xf0\x24\x79\xb7\x15\x59\x81\xef\x22\xd0\x31\xc6\xb0\xc1\x0d\x17\x55\x38\x8a\x9b\x8d\xda\xe4\x0c\x92\xc2\x94\x95\xb2\xb9\x27\xd7\x79\x6a\x36\x1a\x7e\xa7\x49\xa6\x07\x07\x52\x78\x84\xd6\xc5\xfc\xfa\xba\x35\x83\xd7\x8f\x8b\xdb\x5f\x2e\x5b\xb3\x66\xa3\xc1\x26\xd7\x82\xa9\xad\x94\x8b\x60\x2b\xb2\xa8\x34\x57\x3d\xfc\xf7\xf0\x62\x0b\xaa\x9f\xfe\x3b\xab\x95\xf1\xc2\xf0\x1c\x7a\x3d\xf0\x24\xe4\x03\xe4\xe4\x80\x6c\xa9\xd6\x7c\x31\xfd\xcb\xe5\xf5\xe5\xe7\xf9\xf2\xf2\xc8\x85\xc5\x72\xbe\xbc\xba\x28\x8f\xfe\xe8\xc4\x5f\xb0\x3f\xf8\x99\xfd\x46\xe3\xb9\xf9\x22\x15\x6a\x72\xde\x6c\xd4\x55\xf3\xc4\x53\xca\xf3\x2c\xe2\x12\xac\x35\x8f\x4e\x2e\x4b\xd5\x9a\xa1\xcf\xb9\x63\xb8\x83\xe2\x66\x23\xc8\x1f\xe4\x5b\xab\x28\x34\x57\xc8\xf0\x56\x38\x78\xc0\x3d\x7c\x80\x56\x0b\xde\x03\xd9\x2f\xf8\xd8\xd6\xaa\x03\xef\xa1\xd5\xe5\x13\x96\x3c\x6f\x36\x1a\x94\x6a\x1f\x6b\xe5\xff\xf5\x80\xfb\x7f\xc3\x07\x38\xfe\x7e\x0f\x7d\xf8\xfd\x77\xe8\x1f\xb9\x89\x39\xaf\x0b\x6d\xb6\xf6\x01\x55\xa0\x0c\x0f\x80\x3d\xd8\x5c\x5a\x55\xed\x0b\x8e\xe0\x9f\xbf\x02\x3e\xa2\x2c\x08\x7d\x70\x17\xf3\x03\x6f\x33\xbb\x8e\x40\xad\x3a\xc0\xde\xf6\x7a\xb0\x78\xd0\x79\x58\x5a\x25\x8a\x2f\x61\x78\x1b\x1a\x4b\xa0\x0d\xa1\x33\x22\x0b\xd4\xf6\x55\x7c\x92\x6a\x7f\x6b\xf6\x31\x6a\x6c\xf3\x98\xec\x82\x9c\x36\xeb\x76\xa7\xc3\x31\xea\x04\xda\x7f\x93\x54\xda\xaa\xd2\x7f\x5e\x15\xe3\xd0\x74\xee\xb0\x2b\xed\x26\x0f\xb7\x0b\xb3\xb5\x32\xec\x60\x1f\x01\xa5\x96\x77\xb7\x43\xf8\x4f\xe1\x09\x12\x61\xe4\x8b\xa3\x15\xbe\xf6\x77\x0e\x2b\x65\xd5\x26\x3b\x57\xca\xa1\xf7\xc1\xa3\xc0\x84\x98\xdb\xac\xdd\xef\xbc\x3a\xd7\x3f\xeb\x74\x3a\x3f\x73\xea\xb3\x08\x7b\xff\x28\xf0\x7a\x85\x55\xf1\x6b\xb3\xf8\x0e\x1f\xe0\x8d\x05\x49\x5c\xb5\x4e\x1c\x7a\xf5\x36\x69\xbf\x64\x20\x88\x7f\xfc\x00\xa3\xca\x64\x09\x71\x9b\x24\x3f\xc2\x78\xa3\x5f\xd2\x24\x30\x2e\x44\xc4\xa4\x77\xfb\xd8\xf3\xda\x6a\x07\x90\xa8\xc2\x7a\x0f\xa3\x4e\x14\x5c\xeb\x8e\x3a\x55\x3c\x35\x75\x12\x51\x64\x74\xc8\x9d\x5d\x5a\xdd\x0e\x84\xa4\x42\x64\x15\x5d\xf8\x9e\x63\x13\x10\xa6\x66\x54\x52\xee\xed\x46\xd0\xff\x21\x87\xa0\x36\xe1\xd0\xff\xc8\x06\x27\x8f\xed\xd4\xe4\x0a\x1b\x7f\x85\xdc\x60\x84\x4e\xf0\x95\xc7\x6e\xab\x16\xab\x86\x66\x80\x2b\x67\x21\xe7\xbf\x02\xae\x16\x17\x6f\x8f\xb0\x54\x1b\xe5\xf9\x81\x53\x92\x1e\x5f\x49\x5d\x37\xb3\x2d\x78\x7e\x72\x0d\xb9\x81\x41\x64\xde\x56\x55\x91\xf4\x18\x6b\x93\x17\x14\x67\x68\xd6\x94\x1e\x56\xe8\x20\xe9\x65\xa6\x5f\x84\x23\x38\x89\x42\xa2\xdf\xaa\x77\x47\x9d\xe3\x29\x53\xf7\x73\xd9\xc1\xcf\xcd\xff\x05\x00\x00\xff\xff\xd7\x08\x5a\x2d\x6b\x0b\x00\x00")

func _4byte_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		__4byte_tracerJs,
		"4byte_tracer.js",
	)
}

func _4byte_tracerJs() (*asset, error) {
	bytes, err := _4byte_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4byte_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x40, 0x9e, 0x42, 0x5a, 0x7c, 0x34, 0x20, 0xe6, 0x69, 0x44, 0x51, 0x2a, 0x3c, 0x63, 0xc7, 0xc5, 0x4f, 0x8f, 0x64, 0x39, 0xf9, 0x53, 0x3b, 0x49, 0xda, 0x82, 0xdb, 0xf3, 0x62, 0x82, 0x15, 0x79}}
	return a, nil
}

var _bigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\xf8\xde\x92\x20\x9e\xd5\x6e\x2f\x83\x33\x0f\xd0\xb2\xa4\x35\x90\xda\x81\xad\xac\x08\x86\x3d\x50\xd2\x91\x48\x84\x21\x35\xf2\xd0\xae\x50\xe4\xbf\x0f\x94\x2c\x5f\x86\x04\xa9\x9e\x64\xf3\xbb\x9d\x0b\x95\x24\xb8\xb6\x4d\xeb\x54\x2d\x19\x3f\x7f\xf8\xf8\x2b\x32\x49\x10\xff\x06\x51\x48\xa1\x0c\xd2\xc0\xd2\x3a\x3f\x4a\x12\x64\x52\x79\x54\x4a\x13\x94\x47\x23\x1c\xc3\x56\xe0\x13\xb4\x56\xb9\x13\xae\x9d\x8c\x92\xa4\x67\xbc\x72\x18\xd9\x95\x23\x82\xb7\x15\x6f\x85\xa3\x29\x5a\x1b\x50\x08\x03\x47\xa5\xf2\xec\x54\x1e\x98\xa0\x18\xc2\x94\x89\x75\x78\xb6\xa5\xaa\xda\x28\xa8\x18\xc1\x94\xe4\x3a\x5b\x26\xf7\xec\x87\x0c\x9f\x16\x0f\xb8\x23\xef\xc9\xe1\x13\x19\x72\x42\xe3\x3e\xe4\x5a\x15\xb8\x53\x05\x19\x4f\x10\x1e\x4d\xfc\xc7\x4b\x2a\x91\x77\x72\x91\x78\x1b\xa3\xac\x77\x51\x70\x6b\x83\x29\x05\x2b\x6b\xc6\x20\xc5\x92\x1c\x36\xe4\xbc\xb2\x06\xbf\x0c\x56\x3b\xc1\x31\xac\x8b\x22\xe7\x82\x63\x01\x0e\xb6\x89\xbc\x0b\x08\xd3\x42\x0b\x3e\x50\xdf\x6d\xc7\xa1\xea\x12\xca\x74\x26\xd2\x36\x04\x96\x82\x63\xcd\x5b\xa5\x35\x72\x42\xf0\x54\x05\x3d\x8e\x5a\x79\x60\x7c\x9d\x67\x9f\x97\x0f\x19\xd2\xc5\x23\xbe\xa6\xab\x55\xba\xc8\x1e\xaf\xb0\x55\x2c\x6d\x60\xd0\x86\x7a\x29\xf5\xdc\x68\x45\x25\xb6\xc2\x39\x61\xb8\x85\xad\xa2\xc2\x97\x9b\xd5\xf5\xe7\x74\x91\xa5\x7f\xcc\xef\xe6\xd9\x23\xac\xc3\xed\x3c\x5b\xdc\xac\xd7\xb8\x5d\xae\x90\xe2\x3e\x5d\x65\xf3\xeb\x87\xbb\x74\x85\xfb\x87\xd5\xfd\x72\x7d\x33\xc1\x9a\x62\x2a\x8a\xfc\xf7\x3b\x5e\x75\xb3\x73\x84\x92\x58\x28\xed\x87\x3e\x3c\xda\x00\x2f\x6d\xd0\x25\xa4\xd8\x10\x1c\x15\xa4\x36\x54\x42\xa0\xb0\x4d\xfb\xc3\x23\x8d\x5a\x42\x5b\x53\x77\x35\xbf\xb1\x8a\x98\x57\x30\x96\xc7\xf0\x44\xf8\x4d\x32\x37\xd3\x24\xd9\x6e\xb7\x93\xda\x84\x89\x75\x75\xa2\x7b\x31\x9f\xfc\x3e\x19\x8d\xbe\x8f\x00\x20\x49\x20\x95\xe7\x38\x9a\x28\x5a\xd8\x60\x98\x5c\xb7\x6b\xb6\x29\x6c\x49\xc8\x55\xed\xc4\xb3\xef\xd0\x11\x3a\xc5\xf7\x97\xf1\xc0\xd5\xc2\xf3\xb2\x89\xec\xf8\x06\xdb\x90\xeb\x56\xaa\x3b\xef\x0f\xa7\x38\x3b\xdb\xe3\xe9\x1b\x15\x21\x02\x50\x52\xc3\x32\xda\xec\x88\x7b\xc6\x9f\xf1\x60\x8a\x0f\x7b\x8e\x67\xea\x1c\x94\xd9\xd8\x27\x2a\xbb\x5e\xd3\x86\x5c\x3b\x24\xec\x76\x27\xa6\xff\xeb\xcb\xce\x80\xfc\xa4\x63\x47\xea\x14\x55\x30\x45\xf4\x3c\xd7\xb6\x1e\xa3\xcc\x2f\xd0\xd7\x1e\x9f\x8d\x88\xdb\x8c\x19\xb4\xad\x27\xb6\x99\xb0\x5d\xb3\x53\xa6\x3e\xbf\xb8\x3a\xc1\xf4\x71\x7b\x58\x4d\x7d\xc8\x63\x8c\xaa\x70\xbe\xc3\xcc\xc0\x52\xf9\xc9\xbe\x96\x8b\x83\xdb\xa0\xf6\x44\x2d\x8e\x60\xcb\xe6\xf2\xec\xa7\xb3\x4b\xdb\x5c\x9d\x20\xa3\x66\x87\x89\x6d\xff\xfb\x89\xda\x7f\xfe\x27\x15\x9f\x53\xc0\xe5\xe5\xa9\xc4\xcb\xc9\x2f\xd2\x9e\xf0\x9e\x04\x66\xf8\xf8\x96\xc8\xe1\xed\x28\x3b\x66\x38\x4e\x7e\x5a\x3c\x66\x7d\xeb\xfa\xf3\xc3\xe2\x54\x22\x68\x3e\x9e\xea\x56\xee\xee\xb0\x28\x38\x08\x7d\xb4\x29\xb6\x82\x30\xc3\xac\xab\xfe\x76\x45\x95\x4e\xe2\xd5\xe9\x1e\x6c\x1c\xf9\xd7\x7c\x84\xd6\x9d\x57\x2f\xea\xfb\xbb\x99\x13\x19\x28\x8e\x1b\x4c\x25\xec\x86\x5c\xfc\x2a\xc3\x11\x07\x67\xfc\xa0\x18\x69\x95\x32\x42\x0f\xda\xbb\x2b\xcc\x4e\x14\xca\xd4\x7d\xb4\xfe\xe8\x28\x5b\xc1\xdf\x8e\xb7\xae\xd7\x3c\x34\x7e\xdf\x9d\x97\xd1\x7f\x01\x00\x00\xff\xff\xa8\x61\x0a\xc2\xa6\x06\x00\x00")

func bigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_bigram_tracerJs,
		"bigram_tracer.js",
	)
}

func bigram_tracerJs() (*asset, error) {
	bytes, err := bigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6b, 0xe3, 0x93, 0xa3, 0x1c, 0x92, 0x9c, 0xb3, 0xab, 0x5b, 0x28, 0x4e, 0x1e, 0x60, 0xe2, 0x21, 0xaa, 0x4b, 0xb6, 0xa8, 0xcd, 0xb5, 0xde, 0x98, 0x77, 0xab, 0x59, 0x2b, 0x28, 0x5c, 0xbb, 0xd3}}
	return a, nil
}

var _call_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdf\x6f\x1b\x37\xf2\x7f\x96\xfe\x8a\x49\x1e\x6a\x09\x51\x24\x27\xe9\xb7\xf8\xc2\xae\x7a\xd0\x39\x4a\x6a\xc0\x8d\x03\x5b\x69\x10\x04\x79\xa0\x76\x67\xb5\xac\x29\x72\x4b\x72\x25\xef\xa5\xfe\xdf\x0f\x33\xe4\xae\x56\x3f\xec\xf8\x7a\xb8\x43\xef\x45\xd0\x2e\x67\x86\xc3\x99\xcf\xfc\xe2\x8e\x46\x70\x66\x8a\xca\xca\x45\xee\xe1\xe5\xf1\x8b\xff\x87\x59\x8e\x20\x7e\x2f\x45\x92\x0b\xa9\x61\x52\xfa\xdc\x58\xd7\x1d\x8d\x60\x96\x4b\x07\x99\x54\x08\xd2\x41\x21\xac\x07\x93\x81\xdf\xa2\x56\x72\x6e\x85\xad\x86\xdd\xd1\x28\x70\x1c\x58\x24\xee\xcc\x22\x82\x33\x99\x5f\x0b\x8b\x27\x50\x99\x12\x12\xa1\xc1\x62\x2a\x9d\xb7\x72\x5e\x7a\x04\xe9\x41\xe8\x74\x64\x2c\x2c\x4d\x2a\xb3\x8a\x04\x4a\x0f\xa5\x4e\xd1\xf2\xb6\x1e\xed\xd2\xd5\x3a\xbc\x7d\xf7\x01\x2e\xd0\x39\xb4\xf0\x16\x35\x5a\xa1\xe0\x7d\x39\x57\x32\x81\x0b\x99\xa0\x76\x08\xc2\x41\x41\x6f\x5c\x8e\x29\xcc\x59\x1c\x31\xbe\x21\x55\xae\xa3\x2a\xf0\xc6\x94\x3a\x15\x5e\x1a\x3d\x00\x94\x3e\x47\x0b\x2b\xb4\x4e\x1a\x0d\xaf\xea\xad\xa2\xc0\x01\x18\x4b\x42\x7a\xc2\xd3\x01\x2c\x98\x82\xf8\xfa\x20\x74\x05\x4a\xf8\x0d\xeb\x37\xcd\xb1\x39\x75\x0a\x52\xf3\x26\xb9\x29\x10\x7c\x2e\x3c\x9d\x79\x2d\x95\x82\x39\x42\xe9\x30\x2b\xd5\x80\x64\xcd\x4b\x0f\x1f\xcf\x67\x3f\x5f\x7e\x98\xc1\xe4\xdd\x27\xf8\x38\xb9\xba\x9a\xbc\x9b\x7d\x3a\x85\xb5\xf4\xb9\x29\x3d\xe0\x0a\x83\x28\xb9\x2c\x94\xc4\x14\xd6\xc2\x5a\xa1\x7d\x05\x26\x23\x09\xbf\x4c\xaf\xce\x7e\x9e\xbc\x9b\x4d\xfe\x7e\x7e\x71\x3e\xfb\x04\xc6\xc2\x9b\xf3\xd9\xbb\xe9\xf5\x35\xbc\xb9\xbc\x82\x09\xbc\x9f\x5c\xcd\xce\xcf\x3e\x5c\x4c\xae\xe0\xfd\x87\xab\xf7\x97\xd7\xd3\x21\x5c\x23\x69\x85\xc4\xff\x6d\x8b\x67\xec\x3b\x8b\x90\xa2\x17\x52\xb9\xda\x0e\x9f\x4c\x09\x2e\x37\xa5\x4a\x21\x17\x2b\x04\x8b\x09\xca\x15\xa6\x20\x20\x31\x45\xf5\x68\x97\x92\x2c\xa1\x8c\x5e\xf0\x99\xef\x81\x22\x9c\x67\xa0\x8d\x1f\x80\x43\x84\x1f\x73\xef\x8b\x93\xd1\x68\xbd\x5e\x0f\x17\xba\x1c\x1a\xbb\x18\xa9\x20\xcc\x8d\x7e\x1a\x76\x49\x62\x22\x94\x9a\x59\x91\xa0\x25\xd7\x08\xc8\x4a\x32\xbe\x32\x6b\x0d\xde\x0a\xed\x44\x42\x6e\xa6\xff\x09\x03\x51\x78\xc0\x5b\x7a\xf2\x8e\x00\x0b\x16\x0b\x63\xe9\xbf\x52\x35\xc6\xa4\xf6\x68\xb5\x50\x2c\xdb\xc1\x52\xa4\x08\xf3\x0a\x44\x5b\xe0\xa0\x7d\x14\x82\x50\x70\x36\x48\x9d\x19\xbb\x64\x48\x0e\xbb\x5f\xbb\x9d\xa8\xa1\xf3\x22\xb9\x21\x05\x49\x7e\x52\x5a\x8b\xda\x93\x21\x4b\xeb\xe4\x0a\x99\x04\x02\x4d\xb4\xe6\xf4\xd7\x5f\x00\x6f\x31\x29\x83\xa4\x4e\x23\xe4\x04\x3e\x7f\xbd\xfb\x32\xe8\xb2\xe8\x14\x5d\x82\x3a\xc5\x94\xcf\x77\xe3\x60\x9d\x23\x47\xc1\x1a\x8f\x56\x08\xbf\x95\xce\xb7\x68\x32\x6b\x96\x20\x34\x98\x92\xd0\xde\xb6\x8e\xd4\xde\xb0\x40\x41\xff\x35\x5a\xd6\x68\xd8\xed\x34\xcc\x27\x90\x09\xe5\x30\xee\xeb\x3c\x16\x74\x1a\xa9\x57\xe6\x86\x24\x1b\x4b\x00\xb6\x15\x98\x22\x31\x69\x0c\x05\x3a\x47\x73\x0c\x74\xc3\x6e\x87\xf8\x4e\x20\x2b\x35\x6f\xdb\x53\x66\x31\x80\x74\xde\x87\xaf\xdd\x0e\x89\x3d\x13\x85\x2f\x2d\xb2\x3d\xd1\x5a\x63\x1d\xc8\xe5\x12\x53\x29\x3c\xaa\xaa\xdb\xe9\xac\x84\x0d\x0b\x30\x06\x65\x16\xc3\x05\xfa\x29\x3d\xf6\xfa\xa7\xdd\x4e\x47\x66\xd0\x0b\xab\x4f\xc6\x63\xce\x3c\x99\xd4\x98\x06\xf1\x1d\x9f\x4b\x37\xcc\x44\xa9\x7c\xb3\x2f\x31\x75\x2c\xfa\xd2\x6a\xfa\x7b\x17\xb4\xf8\x88\x60\xb4\xaa\x20\xa1\x0c\x23\xe6\x14\x9c\xae\x72\x1e\x97\xf1\x70\x6e\x00\x99\x70\x64\x42\x99\xc1\x1a\xa1\xb0\xf8\x3c\xc9\x91\x7c\xa7\x13\x8c\x5a\xba\xca\xb1\x53\xc7\x40\xbb\x0d\x4d\x31\xf4\xe6\x5d\xb9\x9c\xa3\xed\xf5\xe1\x3b\x38\xbe\xcd\x8e\xfb\x30\x1e\xf3\x9f\x5a\xf7\xc8\x13\xf5\x25\x29\xa6\x88\x07\x65\xfe\x6b\x6f\xa5\x5e\x84\xb3\x46\x5d\xcf\x33\x10\xa0\x71\x0d\x89\xd1\x0c\x6a\xf2\xca\x1c\xa5\x5e\x40\x62\x51\x78\x4c\x07\x20\xd2\x14\xbc\x09\xc8\x6b\x70\xb6\xbd\x25\x7c\xf7\x1d\xef\x35\x86\xa3\xb3\xab\xe9\x64\x36\x3d\x6a\x29\x21\xf5\x65\x96\x45\x3d\x98\x77\x58\x20\xde\xf4\x5e\xf4\x87\x2b\xa1\x4a\xbc\xcc\x82\x46\x91\x76\xaa\x53\x18\x47\x9e\x67\xbb\x3c\x2f\xb7\x78\x88\x69\x34\x82\x89\x73\xb8\x9c\x2b\xdc\x8f\xbd\x18\x9c\x1c\xa7\xce\x53\x6a\x22\xa0\x25\x66\x59\x28\x24\x00\xd5\xbb\x46\x4b\xb3\xc6\x1d\x5f\x15\x78\x02\x00\x60\x8a\x01\xbf\x20\xd8\xf3\x0b\x6f\x7e\xc6\x5b\x76\x47\x6d\x2d\x02\xd0\x24\x4d\x2d\x3a\xd7\xeb\xf7\x03\xb9\xd4\x45\xe9\x4f\xb6\xc8\x97\xb8\x34\xb6\x1a\x3a\xca\x3d\x3d\x3e\xda\x20\x9c\xb4\xe6\x59\x08\x77\xae\x89\x27\x82\xf2\xad\x70\xbd\xcd\xd2\x99\x71\xfe\xa4\x5e\xa2\x87\x7a\x8d\x6d\x41\x6c\x47\xc7\xb7\x47\xfb\xd6\x3a\xee\x6f\x9c\xfe\xe2\x87\x3e\xb1\xdc\x9d\x36\x50\x6e\x32\xc2\xb0\x28\x5d\xde\x63\xe4\x6c\x56\x37\x51\x3f\x06\x6f\x4b\x3c\x88\x74\x46\xcf\x3e\x72\x1c\xaa\x8c\xd2\x86\xb7\x65\xc2\x08\x5a\x08\x4e\x2a\x1c\xd4\x82\x92\xac\x2b\xe7\x6c\x73\x6f\xcc\xbd\x40\xba\x9e\x5e\xbc\x79\x3d\xbd\x9e\x5d\x7d\x38\x9b\xb5\xe1\xa4\x30\xf3\xa4\xd4\xf6\x19\x14\xea\x85\xcf\x59\x7f\x12\xb7\xbd\xfa\x99\x78\x9e\xbf\xf8\x12\xde\xc0\xf8\x40\x74\x77\x1e\xe6\x80\xcf\x5f\x58\xf6\xdd\xbe\xf9\xb6\x49\x83\x31\xbf\x06\x10\x99\xe2\xae\x9d\x23\x0e\x84\xdd\x12\x7d\x6e\x52\xce\x83\x89\x08\xa9\xb4\xb6\x62\x6a\x34\x3e\x3a\xf8\x7a\x75\xf4\x4d\x2e\x2e\x8e\xe0\x8f\x3f\xa0\xf5\x7c\x76\xf9\x7a\xda\x7e\xf7\x7a\x7a\x31\x7d\x3b\x99\x4d\x77\x69\xaf\x67\x93\xd9\xf9\x19\xbf\xed\x47\xab\x8c\x46\x70\x7d\x23\x0b\x4e\xa8\x9c\xa6\xcc\xb2\xe0\x8e\xb0\xd1\xd7\x0d\xc0\xe7\x86\xfa\x2d\x1b\xeb\x45\x26\x74\x52\xe7\x71\x57\x3b\xcd\x1b\x72\x99\xa9\x63\x65\x3f\x15\xb4\x81\xda\x6f\xdc\x28\xdd\x7b\x8b\x71\xd3\xb4\xe7\x4d\xad\xd7\xc6\xa0\xc1\x23\x9c\xeb\x38\xc9\xf4\x1e\x7f\x48\xf8\x1b\x1c\xc3\x09\xbc\x88\x99\xe4\x81\x54\xf5\x12\x9e\x91\xf8\x3f\x91\xb0\x5e\x1d\xe0\xfc\x6b\xa6\x2d\x6f\x98\xb8\x26\xf7\xe6\xbf\x9f\xce\x4c\xe9\x2f\xb3\xec\x04\x76\x8d\xf8\xfd\x9e\x11\x1b\xfa\x0b\xd4\xfb\xf4\xff\xb7\x47\xbf\x49\x7d\x84\x2a\x53\xc0\x93\x3d\x88\x84\xc4\xf3\x64\x27\x0e\xa2\x71\xb9\x9b\x61\x69\x30\xbe\x27\xd9\xbe\xdc\xc6\xf0\x7d\xd9\xe2\xdf\x4a\xb6\x07\xbb\x32\xea\xbd\xb6\xfb\xae\x01\x58\xf4\x56\xe2\x8a\xa6\xaa\x23\xc7\x22\xa9\x3f\x35\x6b\xa1\x13\x1c\xc2\x47\x0c\x12\x35\x22\x27\x97\xd8\xcf\x52\x3b\xc2\x2d\x1e\xf5\xa4\x71\x2e\x61\x88\x09\x6e\x3b\x2d\xc2\x52\x54\x34\x97\x64\xa5\xbe\xa9\x60\x21\x1c\xa4\x95\x16\x4b\x99\xb8\x20\x8f\x7b\x59\x8b\x0b\x61\x59\xac\xc5\xdf\x4b\x74\x34\xe4\x10\x90\x45\xe2\x4b\xa1\x54\x05\x0b\x49\x93\x0a\x71\xf7\x5e\xbe\x3a\x3e\x06\xe7\x65\x81\x3a\x1d\xc0\x0f\xaf\x46\x3f\x7c\x0f\xb6\x54\xd8\x1f\x76\x5b\x69\xbc\x39\x6a\xf4\x06\x2d\x44\xf4\xbc\xc6\xc2\xe7\xbd\x3e\xfc\x74\x4f\x3d\xb8\x27\xb9\x1f\xa4\x85\xe7\xf0\xe2\xcb\x90\xf4\x1a\x6f\xe1\x36\x78\x12\x50\x39\x8c\xd2\x68\xb6\xbb\x7c\x7d\xd9\xbb\x11\x56\x28\x31\xc7\xfe\x09\xcf\x7a\x6c\xab\xb5\x88\x0d\x3f\x39\x05\x0a\x45\xb3\x89\x48\x12\x53\x6a\x4f\x86\xaf\x7b\x77\x55\x51\x7e\x3f\xf2\xb5\x3c\x1e\x8c\x44\x92\xa0\x73\x75\xba\x67\xaf\x91\x3a\x62\x49\xdc\x20\xb5\x93\x29\xb6\xbc\x42\xd9\xc1\x70\x6a\x8e\x14\x34\x37\xd6\x02\x97\xc6\xd1\x26\x73\x84\xb5\xa5\x39\xc3\x49\x9d\xf0\x90\x9d\x22\x59\xdb\x81\xd1\x20\x40\x19\x9e\xea\x39\xc6\x41\xd8\x85\x1b\x86\x7c\x4f\xdb\x52\xce\xd1\x66\x3d\xdc\x06\x72\x1b\xaa\xdc\xd1\xef\xb4\x03\x1a\xf0\x56\x3a\xcf\x0d\x24\x69\x29\x1d\x04\x24\x4b\xbd\x18\x40\x61\x0a\xce\xd3\x8f\xec\x25\xaf\xa6\xbf\x4e\xaf\x9a\xe2\xff\x78\x27\xd6\x2d\xfe\xd3\x66\x02\x02\x4b\xe3\x85\xc7\xf4\xe9\x81\x9e\xfd\x00\xa0\xc6\xf7\x00\x8a\xe4\x6f\x6a\xe3\xfb\xd6\x71\x94\x70\x7e\xe3\x98\x05\x86\xf1\xa5\xad\x80\x2b\x95\x77\x3b\xb9\x7b\x37\x39\x98\xa2\xae\x10\xa4\x14\xa7\x1d\x4a\xec\x07\x3a\xeb\x68\x70\xdf\x06\x9e\x80\x40\xd3\x4a\x00\xbc\x5e\x77\x68\x22\xe4\x7c\xd6\xd0\x94\x9e\x9c\x4e\x55\x7a\x93\xe2\x16\xc2\x7d\x70\xec\xdb\x98\xe4\xe6\x72\x71\xae\x7d\xaf\x5e\x3c\xd7\xf0\x1c\xea\x07\x4a\xdd\xf0\x7c\x2b\x56\x0e\xe4\xc0\x4e\x8a\x0a\x3d\xc2\x46\xc4\x29\xec\xbc\x22\x41\xe1\xd0\x6c\x1a\x8b\x7e\xbf\x04\x1f\x47\x69\x64\x96\x27\x16\xfd\x10\x7f\x2f\x85\x72\xbd\xe3\xa6\x25\x08\x27\xf0\x86\x8b\xd8\xb8\x29\x63\x75\x9d\x23\x9e\xad\x26\x23\x0a\x0c\x6c\xd1\x1a\x35\x5b\x3a\x0f\xb5\x29\xc5\x07\x25\x44\x11\x31\x39\x34\x1e\x8b\xf0\x3b\xd4\x65\x76\xda\x04\xf0\xb4\x29\xfb\x99\x90\xaa\xb4\xf8\xf4\x14\x0e\x24\x17\x57\xda\x4c\x24\xec\x4b\x87\xc0\x23\xa8\x03\x67\x96\x98\x9b\x75\x50\xe0\x50\x8a\xda\x07\x47\x83\x83\x9d\x22\x41\x64\x14\xf1\xa5\x13\x0b\x6c\x81\xa3\x31\x78\xed\xa8\x83\x73\xf1\x9f\x86\xce\xb3\xe6\xf1\x1b\x28\x0a\xbb\x7c\x13\x1a\x0f\x61\xe3\xa0\x97\xf7\x7a\x99\x9a\x88\x3b\x9a\xd6\x43\xad\x6a\x68\x38\x1a\xe4\xfc\x2b\x7e\xff\xcf\x38\x3e\x78\x3e\xfe\x3e\x36\xd0\x76\x69\xc3\x19\xb7\x89\xc3\x49\x37\x4d\xcc\xb7\x51\xd0\xac\xde\x07\x80\xfb\xfa\x23\x82\xaa\xfe\x0d\x13\xbf\x81\x2b\xb7\x34\xf4\x54\x58\x5c\x49\x53\x52\xb5\xc2\xff\xa5\xf9\xaf\xe9\xef\xee\xba\x9d\xbb\x78\xe7\xc5\xee\x6b\x5f\x7a\xad\xf3\x78\x63\x1b\x5a\xa3\x56\xad\x30\x5c\x48\xe3\x55\x58\x16\xee\x52\x3b\xcc\xff\xc0\xe5\x57\x8c\x77\x6f\x0a\xaa\xfd\xb1\x14\x29\x8b\x22\xad\x9a\xea\x37\x08\x5d\x07\xe4\x42\xa7\x71\xf2\x10\x69\x2a\x49\x1e\x63\x91\x34\x14\x0b\x21\x75\xf7\xa0\x19\xbf\x59\x72\x0f\x21\x63\xaf\x91\x6d\x57\xcd\x38\x31\xd2\x78\xc7\x1a\x77\x1f\x51\x1d\x77\x62\x69\xf7\x1e\x2f\x5e\x05\x1a\xed\xca\x25\xb7\xbd\x20\x56\x42\x2a\x41\xa3\x16\xb7\x53\x3a\x85\x44\xa1\xd0\xe1\xe6\x1e\x33\x6f\x56\x68\x5d\xf7\x11\x20\xff\x33\x18\xdf\x49\x8e\xf5\x63\x34\xc7\xe3\x63\xf6\xb1\x11\x1b\x8e\xff\x46\x09\xef\x23\xbc\x5a\xe6\x0d\x91\x25\x3d\x7f\xd0\x41\xed\xbb\x8f\x0b\x29\x6e\x90\x88\xe6\x27\x38\x6e\x35\xe1\x7f\x95\x20\xdb\x87\xd8\x45\xd3\x8c\xc5\xc3\x7b\x63\x06\xa0\x50\xf0\x48\x54\x7f\x74\xa9\x9b\xcf\x87\x26\xb4\x3a\x7a\x43\xfb\xb6\x17\xbe\x7c\x89\x95\x63\x7d\xdd\x11\xfa\xf8\x39\xa2\x06\xe9\xd1\x0a\x1a\x7e\x08\x5d\xf1\x4b\x01\x69\xe9\x58\x1c\xfb\x45\x52\xd0\x45\xc1\xf1\xda\x9e\xea\xb3\xd4\x8b\x61\xb7\x13\xde\xb7\xe2\x3d\xf1\xb7\x9b\x78\x0f\xc5\x90\x39\xe3\x05\x40\x33\xff\x27\xfe\x96\x7b\x46\x9e\x91\x77\x2e\x01\x68\x8d\x5e\x85\x01\x7a\x67\xe4\x67\xc6\x38\xf6\xef\xde\x2c\xd2\x1a\xbf\xdb\x02\x38\x93\x2e\x84\x0b\x62\x76\x42\xc2\xdf\xee\x47\x44\xcd\x40\xc1\x70\x72\x98\x81\x96\x0e\x30\xed\x5c\x43\x10\x31\xbf\x0a\xab\xa1\xb0\x9f\xb4\x57\xc3\xab\x78\x50\xb9\x6c\xd9\x46\x2e\xd9\x36\x77\xa7\x87\x93\xdc\x71\x8d\xc7\xc3\xc9\x8c\x6c\xde\x00\xf6\x1e\xd6\xf6\x60\xb1\x4f\xf2\x50\xaa\x64\xe9\x75\x66\xbb\x87\x95\xa5\xb7\x5a\x0f\x7f\xfb\x78\x91\x0d\x71\x5b\xc5\x2d\x9a\x43\x42\x62\x9e\x89\x74\xc1\xb2\xb5\x80\x80\xea\xa0\x2b\x23\x5a\xfe\x03\xa3\xc4\x76\xfc\xd4\x4b\x60\x31\x7c\x58\xe0\x86\x94\xc2\xc7\xcc\xb9\xf8\x97\x8e\x66\xc6\x4d\x5c\xa4\xe8\xa4\xc5\x14\x32\x89\x2a\x05\x93\xa2\xe5\x89\xf4\x37\x67\x74\xf8\x84\x84\x56\x92\xc4\xf0\xa9\x2c\x7c\xad\xe6\x0f\x78\x5a\x26\xe8\x2b\xc8\x50\xf0\xb7\x20\x6f\xa0\x10\xce\xc1\x12\x05\xcd\xa0\x59\xa9\x54\x05\xc6\xa6\x48\xc2\x9b\xa1\x8c\x42\xd2\x40\xe9\xd0\x3a\x58\xe7\x26\x96\x49\xee\xd2\x0a\x6a\x3a\xa5\x1f\xc4\x7b\x17\xe9\x0a\x25\x2a\x90\x9e\x4a\x72\x3c\x54\x3b\x4a\x9b\x0f\x30\xfc\x15\xc7\x50\xd5\xdd\x0f\xd1\x7a\xae\xdb\x8e\x51\x7e\x4d\x4f\xdb\xd1\x19\xe7\x9a\xed\xb8\xdc\xdc\x48\x6d\x07\x61\x5d\x36\xb6\x23\xad\x5d\x84\xb6\xc3\x89\x57\xf8\x69\x3b\x90\x5a\xfd\x32\x2f\x30\x38\x1a\x06\x7e\xda\x09\x2d\xd6\x32\xc6\x56\xf8\xdc\xd8\x90\xf3\xd3\x20\x02\x86\xbc\xd8\x23\xe3\xdc\x60\x45\x99\x38\xd8\xa8\x55\x56\xc2\x8b\xcf\x37\x58\x7d\x39\x5c\x45\x22\x1c\x5b\x74\x4d\xd9\xa8\x21\x1d\xd6\x1e\x08\xe4\x46\x0b\x39\x3e\x3e\x05\xf9\x63\x9b\xa1\xae\x7c\x20\x9f\x3d\xab\xf7\x6c\xaf\x7f\x96\x5f\xea\xe8\x6c\x10\xbf\xb3\xde\xdf\xd2\x28\xc6\x48\xa0\xa1\xa0\xe8\xde\x75\xff\x19\x00\x00\xff\xff\xbc\x07\xb2\x8b\x8a\x21\x00\x00")

func call_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_call_tracerJs,
		"call_tracer.js",
	)
}

func call_tracerJs() (*asset, error) {
	bytes, err := call_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "call_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8a, 0x90, 0x8f, 0x28, 0x2f, 0xe, 0xf, 0x57, 0xf8, 0x8d, 0x2b, 0xa0, 0x20, 0x54, 0xc2, 0x97, 0x50, 0x2d, 0xac, 0xfb, 0xc6, 0x1e, 0xec, 0x9e, 0x1e, 0x7a, 0x18, 0x71, 0xa4, 0x7b, 0xd, 0xf7}}
	return a, nil
}

var _evmdis_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x6f\x6f\xda\xca\xf2\x7e\x0d\x9f\x62\x94\x57\xa0\x52\xc0\xc6\x50\xe2\x9c\x1c\x89\x5f\x4a\x7b\xf2\x53\x9a\x44\x40\xee\x51\x85\xf2\x62\x81\x31\x5e\xd5\x78\x7d\x77\xd7\xe4\x70\xab\x7c\xf7\xab\xd9\x59\xf3\xa7\x49\x6e\x4f\xa5\xd3\x17\x3b\xb5\x77\x9e\x67\x9e\x9d\x19\xcf\x92\x4e\x07\xae\x54\xb1\xd3\x72\x9d\x5a\x08\xbb\xc1\x10\x66\x29\x82\xf8\x77\x29\x96\xa9\x90\x39\x8c\x4a\x9b\x2a\x6d\xea\x9d\x0e\xcc\x52\x69\x20\x91\x19\x82\x34\x50\x08\x6d\x41\x25\x60\x4f\xbc\x33\xb9\xd0\x42\xef\xda\xf5\x4e\x87\x11\xaf\x6c\x12\x3a\xd1\x88\x60\x54\x62\x9f\x84\xc6\x18\x76\xaa\x84\xa5\xc8\x41\xe3\x4a\x1a\xab\xe5\xa2\xb4\x08\xd2\x82\xc8\x57\x1d\xa5\x61\xa3\x56\x32\xd9\x11\xa1\xb4\x50\xe6\x2b\xd4\x2e\xac\x45\xbd\x31\x95\x86\xcf\xb7\x0f\x70\x83\xc6\xa0\x86\xcf\x98\xa3\x16\x19\xdc\x97\x8b\x4c\x2e\xe1\x46\x2e\x31\x37\x08\xc2\x40\x41\x6f\x4c\x8a\x2b\x58\x38\x3a\x02\x7e\x22\x29\x53\x2f\x05\x3e\xa9\x32\x5f\x09\x2b\x55\xde\x02\x94\x36\x45\x0d\x5b\xd4\x46\xaa\x1c\x7a\x55\x28\x4f\xd8\x02\xa5\x89\xa4\x21\x2c\x1d\x40\x83\x2a\x08\xd7\x04\x91\xef\x20\x13\xf6\x00\xfd\x69\x3a\x0e\xa7\x5e\x81\xcc\x5d\x90\x54\x15\x08\x36\x15\x96\xce\xfc\x24\xb3\x0c\x16\x08\xa5\xc1\xa4\xcc\x5a\xc4\xb5\x28\x2d\xfc\x79\x3d\xfb\xe3\xee\x61\x06\xa3\xdb\xaf\xf0\xe7\x68\x32\x19\xdd\xce\xbe\x5e\xc0\x93\xb4\xa9\x2a\x2d\xe0\x16\x99\x4a\x6e\x8a\x4c\xe2\x0a\x9e\x84\xd6\x22\xb7\x3b\x50\x09\x31\x7c\x19\x4f\xae\xfe\x18\xdd\xce\x46\xff\x77\x7d\x73\x3d\xfb\x0a\x4a\xc3\xa7\xeb\xd9\xed\x78\x3a\x85\x4f\x77\x13\x18\xc1\xfd\x68\x32\xbb\xbe\x7a\xb8\x19\x4d\xe0\xfe\x61\x72\x7f\x37\x1d\xb7\x61\x8a\xa4\x0a\x09\xff\xf3\x8c\x27\xae\x76\x1a\x61\x85\x56\xc8\xcc\x54\x79\xf8\xaa\x4a\x30\xa9\x2a\xb3\x15\xa4\x62\x8b\xa0\x71\x89\x72\x8b\x2b\x10\xb0\x54\xc5\xee\x6f\x97\x94\xb8\x44\xa6\xf2\xb5\x3b\xf3\x1b\xad\x08\xd7\x09\xe4\xca\xb6\xc0\x20\xc2\x6f\xa9\xb5\x45\xdc\xe9\x3c\x3d\x3d\xb5\xd7\x79\xd9\x56\x7a\xdd\xc9\x98\xcc\x74\x7e\x6f\xd7\x89\x11\xb7\x9b\x95\x34\x33\x2d\x96\xa8\x41\xa3\x2d\x75\x6e\xc0\x94\x49\x42\x7e\x16\x64\x9e\x28\xbd\x71\x2d\x02\x89\x56\x1b\x10\x60\xc9\x17\xac\x82\x02\x35\x6d\x7a\x8a\xf7\xc6\xee\x32\x27\x72\x25\x8d\x30\x06\x37\x8b\x6c\xd7\xae\x7f\xaf\xd7\x8c\x15\xcb\x6f\x31\xcc\xbf\xab\xc2\xc4\x30\x7f\x7c\x7e\x6c\xd5\xeb\xb5\xbc\x28\x4d\x8a\x26\x86\xef\xdd\x18\xba\x2d\x08\x62\x08\x5a\x10\xba\xb5\xe7\xd6\xc8\xad\x7d\xb7\x0e\xdc\xfa\xc1\xad\x43\xb7\x9e\xbb\x35\xe8\xb2\x61\x74\xc0\x6e\x01\xfb\x05\xec\x18\xb0\x67\xc8\x9e\xa1\x8f\xc3\x81\x42\x8e\x14\x72\xa8\x90\x63\x85\xcc\xd2\x63\x97\x88\x59\x22\x66\xe9\x33\x4b\x9f\x59\xfa\xec\xd2\x67\x96\xbe\x17\xdc\x77\xe7\xe9\x33\x4b\xff\x03\x3f\x31\x4b\x9f\x59\x06\x7c\xe4\x01\x03\x06\xfe\x88\x0c\x18\xb0\xf8\x01\x03\x06\x0c\x18\x32\x60\xc8\x61\x87\x21\x3f\xf5\xd8\x30\xcb\x90\xc3\x0e\x07\x6c\x38\xec\x90\x59\x86\xcc\x72\xce\xe2\xcf\x03\xb7\x77\xce\xf1\xce\x39\xde\xb9\xcf\x6a\x95\x56\x9f\xd7\xae\x4f\x6c\x37\xf4\xb6\xe7\x6d\xe4\x6d\xdf\x5b\x9f\xf9\xae\x4f\x7d\xd7\xe7\xbe\xeb\xf9\xf6\x75\xf2\x7c\x81\xe7\x0b\x3c\x5f\xe0\xf9\x02\xcf\x57\x55\xb2\x2a\x65\x55\x4b\x5f\xcc\xc0\x57\x33\xf0\xe5\x0c\x7c\x3d\x03\x5f\xd0\xc0\x57\x34\xf0\x25\x0d\x7c\x4d\x83\xd0\xf3\x85\xc3\x18\x42\xb2\xe7\x31\xf4\x5a\x10\xf4\xba\x31\x44\x64\x83\x18\xfa\x64\xc3\x18\x06\x64\x7b\x31\x7c\x20\x1b\xc5\x30\x24\xdb\x8f\xe1\x9c\x2c\xf1\x51\xd7\xf6\x88\x90\x18\x7b\xa4\x90\x28\x7b\x24\x91\x38\x23\xd2\x48\xa4\x11\x89\x24\xd6\x88\x54\x12\x6d\x44\x32\x89\x37\x8a\x58\x47\xd4\x67\x1d\xd1\x80\x75\x44\x1f\x58\x07\x75\x9f\x03\x9c\xb3\x0e\xea\x3f\xd2\x41\x0d\x48\x3a\x5c\x07\x92\x0e\xd7\x83\xa4\xc3\x75\x21\x51\x52\x1f\x3a\x1d\xae\x13\x89\x94\x7a\xd1\xe9\x70\xdd\x48\xb4\xae\x1f\x89\xd7\x77\x64\x30\x08\xbc\x0d\xbd\xed\x79\x1b\x39\x1b\x46\xfe\x2b\x8a\xfc\x67\x14\xf9\xef\x28\xea\xf9\x7d\xef\xe7\x3e\x82\x67\xfa\xce\x3b\x1d\xd0\x68\xca\xcc\xd2\xe8\x97\xf9\x56\x7d\xa3\xe1\x9c\x62\x0e\x22\xcb\xdc\x14\x53\xc5\x52\xad\xd0\xf0\x74\x5c\x20\xe6\x20\x2d\x6a\x41\xd7\x83\xda\xa2\xa6\x7b\xb1\x9a\x4c\x8e\x8e\x30\x89\xcc\x45\x56\x11\xfb\x09\x4a\x83\x49\xe6\xeb\x76\xbd\xc6\xef\x63\x48\xca\x7c\x49\xa3\xab\xd1\x84\xef\x9e\x02\x6c\x2a\x4d\xdb\x8d\xa4\x79\xf7\xb1\xad\x0a\x73\x01\x95\xce\x44\xbc\x26\xd3\x0d\xda\xa5\x2d\x45\x06\xf8\x17\x2e\x4b\x37\x0b\x55\x02\x22\xf7\xca\x21\xe1\x71\x5f\x73\xf8\xa3\xa8\x99\x5a\xb7\x60\xb5\xa0\xe0\x55\x08\x63\xb1\x38\x8e\x40\x97\x06\x6e\x51\xef\x2a\x2e\x77\x09\x52\xc8\x7f\x7d\xf1\xe1\x90\xa8\x09\xf7\x2a\x73\xbd\x56\xdb\x0a\x0d\x89\x16\x1b\x84\xcb\xe3\xd3\x1d\xfe\xdb\xce\x30\x5f\xdb\x14\xde\x43\xf0\x78\x51\xf7\x08\xd4\x5a\x69\xb8\x84\x4c\xad\xdb\x6b\xb4\x63\x7a\x6c\x34\x2f\xea\xb5\x9a\x4c\xa0\xe1\x76\x99\xbe\xe6\xb8\xe7\x67\xee\xd5\xd9\x23\x5c\x32\x94\x3c\x9f\x01\x33\x83\x40\x00\x4f\xf3\x11\x0b\x9b\x36\x9a\x70\x79\x2c\xc5\xc7\xf7\x74\xaa\xa0\x4b\x05\x2e\xf9\xa9\xa6\x8a\x18\xe8\x1f\x11\xa8\xa2\x6d\xd5\x6d\xb9\x59\xa0\x6e\x34\x5b\x6e\x7b\x45\x84\x10\xc3\x29\x3f\xef\x55\x65\x9e\x3f\xba\xe7\x67\x92\xe4\xd4\x3b\xc5\x54\xdb\xea\xe4\xbf\x43\xd7\x47\x77\x67\x2f\x34\x6e\x55\x01\x97\xb0\x77\x9c\xbf\x80\x70\xb2\x08\x91\x28\xdd\x20\x94\x84\x4b\xe8\x5e\x80\x84\xdf\xf8\x6c\xfe\x06\x9b\x33\x5b\x5b\x15\x8f\x17\x20\xdf\xbd\x6b\x3a\x50\xcd\xbf\x65\x8d\x6d\x72\x75\x39\xe2\x84\x14\x88\xdf\x1a\xb2\xd9\xb6\x6a\x6a\xb5\xcc\xd7\x8d\x60\xd0\x74\xb9\xaf\x3d\xd3\x62\x9e\xa4\x5d\xb2\xbf\x4b\x89\x77\x6a\xfa\x33\x2c\x85\x41\x38\xbb\x1a\xdd\xdc\x9c\xc5\x70\x78\xb8\xba\xfb\x38\x3e\x8b\xf7\x87\x94\xb9\xb1\xf4\xb3\x95\x4b\x7c\x14\xb7\xd7\x6c\x6f\x45\x56\xe2\x5d\xc2\xf5\xde\xbb\xcb\xff\xe0\x4b\xef\xe8\x85\x37\x17\x70\x7e\xb6\x16\xc6\xb5\xc3\x0f\x80\xee\x9b\x00\xab\x5e\xf3\x0f\x4e\xd3\x70\x0a\x71\x4c\xaf\xa1\xc2\x23\xd4\x0f\x18\x99\x17\xa5\xdd\x63\x36\xb8\x51\x7a\xd7\x36\xf4\xc3\xa7\xe1\x73\xd2\xda\x27\xe7\x9d\x3f\xf7\x0f\x14\x87\x5e\xcf\xcb\x2c\x3b\xdd\xe3\x39\xf2\xc6\xa6\x2a\x38\x27\x73\xdf\x3b\x47\x1f\x81\x6b\x01\xf6\xf3\xd1\x16\x1a\xc5\xb7\x8b\x43\x45\x3f\x8e\x6f\xc6\x9f\x47\xb3\xf1\x49\x65\xa7\xb3\xd1\xec\xfa\x8a\x5f\xfd\xbc\xb6\xe1\x2f\xd5\xf6\x65\x27\x1c\xce\xe1\x8e\x01\x2f\x5a\xf0\xf5\x16\xf8\xe5\x1e\xf8\xa5\x26\x38\x14\xf4\x9f\xa8\xe8\xff\x2e\xe9\x3f\x5d\xd3\xc9\x78\xf6\x30\xb9\x3d\x2a\x1d\xfd\xb1\xf2\x37\xbe\x19\xef\xfa\x7a\xdd\x82\x17\xee\x3c\xbe\xfc\x15\xf7\x4a\xe3\xab\xd2\xb6\x5c\xe8\x77\x15\xeb\x1b\x7a\xa7\xb3\xbb\xfb\x43\xef\x3d\x5c\x5f\x5d\xef\x87\xca\xcf\x62\x74\x5b\xd0\x7d\x83\xf5\xff\x1f\xbe\xdc\x7f\x1c\x4f\x67\x9e\xa9\xca\x6c\xb1\xdc\x7f\xa6\x6b\xb4\xf7\x57\x8d\xa3\x19\x28\x93\x6a\xfe\x49\x73\x4f\x69\xae\xa6\xdf\x1e\x9d\x61\xbe\x87\x9f\xdc\x1c\xf0\x1e\xba\x7f\xf5\xf1\xc0\x75\x18\xee\x3f\x16\xcc\xdf\x60\x8e\xf8\x50\xd7\x93\x8b\xf4\x70\xba\xd3\x3b\x88\xf1\xf5\xda\x73\xfd\xb9\xfe\xdf\x00\x00\x00\xff\xff\x04\x33\x0b\x8e\x58\x10\x00\x00")

func evmdis_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_evmdis_tracerJs,
		"evmdis_tracer.js",
	)
}

func evmdis_tracerJs() (*asset, error) {
	bytes, err := evmdis_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "evmdis_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe6, 0xa1, 0x64, 0x22, 0x1b, 0xa0, 0xfe, 0xf4, 0xe3, 0x4d, 0x86, 0xf4, 0x1b, 0xef, 0x48, 0x98, 0x5e, 0x7e, 0x60, 0x10, 0x1b, 0xf6, 0xd4, 0x47, 0x99, 0x1c, 0x7e, 0x2, 0x9, 0x3f, 0xf2, 0x96}}
	return a, nil
}

var _noop_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x4f\x6f\xdb\x46\x10\xc5\xcf\xe6\xa7\x78\xc7\x04\x10\xc4\xfe\xb9\x14\x6e\x51\x80\x35\xec\x44\x85\x23\x1b\x12\xdd\xc0\xc7\x21\x39\x14\x37\x5d\xed\x30\xb3\xb3\x52\x84\x20\xdf\xbd\x58\x52\x6a\x52\x20\x6d\x7a\x13\x56\x7a\xbf\xf7\x66\xde\xa8\x2c\x71\x23\xe3\x49\xdd\x6e\x30\xfc\xf0\xdd\xf7\x3f\xa1\x1e\x18\xf4\x3e\x51\x3b\x90\x0b\xa8\x92\x0d\xa2\xb1\x28\x4b\xd4\x83\x8b\xe8\x9d\x67\xb8\x88\x91\xd4\x20\x3d\xec\x1f\xbf\xf6\xae\x51\xd2\xd3\xb2\x28\xcb\x59\xf1\x95\x2f\xb3\xba\x57\x66\x44\xe9\xed\x48\xca\xd7\x38\x49\x42\x4b\x01\xca\x9d\x8b\xa6\xae\x49\xc6\x70\x06\x0a\x5d\x29\x8a\xbd\x74\xae\x3f\x65\xa0\x33\xa4\xd0\xb1\x4e\xb6\xc6\xba\x8f\x97\x0c\xaf\xd6\x4f\xb8\xe7\x18\x59\xf1\x8a\x03\x2b\x79\x3c\xa6\xc6\xbb\x16\xf7\xae\xe5\x10\x19\x14\x31\xe6\x97\x38\x70\x87\x66\xc2\x65\xe1\x5d\x8e\xb2\x3d\x47\xc1\x9d\xa4\xd0\x91\x39\x09\x0b\xb0\xb3\x81\x15\x07\xd6\xe8\x24\xe0\xc7\x8b\xd5\x19\xb8\x80\x68\x86\xbc\x20\xcb\x03\x28\x64\xcc\xba\x97\xa0\x70\x82\x27\xfb\x2c\xfd\xe6\x3a\x3e\x4f\xdd\xc1\x85\xc9\x64\x90\x91\x61\x03\x59\x9e\xf9\xe8\xbc\x47\xc3\x48\x91\xfb\xe4\x17\x99\xd5\x24\xc3\xdb\x55\xfd\xfa\xe1\xa9\x46\xb5\x7e\xc6\xdb\x6a\xb3\xa9\xd6\xf5\xf3\xcf\x38\x3a\x1b\x24\x19\xf8\xc0\x33\xca\xed\x47\xef\xb8\xc3\x91\x54\x29\xd8\x09\xd2\x67\xc2\x9b\xdb\xcd\xcd\xeb\x6a\x5d\x57\xbf\xad\xee\x57\xf5\x33\x44\x71\xb7\xaa\xd7\xb7\xdb\x2d\xee\x1e\x36\xa8\xf0\x58\x6d\xea\xd5\xcd\xd3\x7d\xb5\xc1\xe3\xd3\xe6\xf1\x61\x7b\xbb\xc4\x96\x73\x2a\xce\xfa\x6f\x6f\xbc\x9f\xba\x53\x46\xc7\x46\xce\xc7\xcb\x1e\x9e\x25\x21\x0e\x92\x7c\x87\x81\x0e\x0c\xe5\x96\xdd\x81\x3b\x10\x5a\x19\x4f\xff\xbb\xd2\xcc\x22\x2f\x61\x37\xcd\xfc\x2f\xa7\x88\x55\x8f\x20\xb6\x40\x64\xc6\x2f\x83\xd9\x78\x5d\x96\xc7\xe3\x71\xb9\x0b\x69\x29\xba\x2b\xfd\x0c\x8b\xe5\xaf\xcb\x22\x13\x83\xc8\x58\x2b\xb5\xac\xb9\x9a\x77\x29\xda\x44\x6e\x48\xb9\x91\xc0\x68\xc4\x79\xd6\x31\x37\x8c\x56\xba\x1c\xff\x7d\x72\xca\x1d\x7a\x95\x3d\x08\xbf\xd3\x81\xb6\xad\xba\xd1\x32\x4e\x9a\x77\xdc\x1a\x4c\xe6\x02\xa9\xf1\xd3\x29\x12\x4c\x29\x44\x6a\xf3\xcd\xe4\xcf\x2d\xeb\xb2\xf8\x58\x5c\x95\x25\xa2\xf1\x98\xbd\x5d\x38\xc8\x9f\x99\x2b\x9a\xdb\xd4\x13\x64\x9c\x1c\xa7\xbb\xc8\xa1\xfe\x78\x03\xfe\xc0\x6d\x32\x8e\xcb\xe2\x2a\xeb\xae\xd1\xa7\x30\x41\x5f\x78\xd9\x2d\xd0\x35\x2f\xf1\x11\x9f\x16\xc5\x44\xee\x29\x79\xfb\x12\x7d\x1c\xce\x47\x42\xad\x25\xf2\x67\x5a\x8e\x24\x3d\x28\x5c\x0c\xfb\xb9\xbe\xab\x49\xff\xdf\x16\xca\xf1\x6b\x1e\xe4\xfd\xe4\x33\x03\xe3\x5c\x7c\xc3\x1c\xe0\x8c\x95\xf2\xe5\xcb\x81\x35\xff\xe5\xa1\x6c\x49\x43\x9c\x70\x59\xd3\xbb\x40\xfe\x02\x3e\x1f\x47\xde\x98\x0b\xbb\x65\x71\x35\xbf\x7f\x11\xaa\xb5\x0f\x7f\x87\x2a\x3e\x15\x7f\x05\x00\x00\xff\xff\xeb\xf3\x64\xff\xe2\x04\x00\x00")

func noop_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_noop_tracerJs,
		"noop_tracer.js",
	)
}

func noop_tracerJs() (*asset, error) {
	bytes, err := noop_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "noop_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb9, 0xfc, 0x84, 0x2, 0x3f, 0x32, 0x27, 0xe5, 0xe0, 0x7a, 0x82, 0x5a, 0x5f, 0xde, 0x66, 0xb2, 0x15, 0xb, 0xa7, 0xb9, 0x12, 0x71, 0x73, 0xdd, 0xe1, 0x97, 0xb5, 0x4d, 0xfa, 0x49, 0xbc, 0x42}}
	return a, nil
}

var _opcount_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x5f\x6f\xdb\x36\x14\xc5\x9f\xad\x4f\x71\x1e\x5b\xd4\x90\xba\xed\x65\xc8\x86\x01\x5a\x90\xb4\x06\x12\x27\xb0\x95\x16\x79\xa4\xa4\x2b\x8b\x2b\x4d\x6a\x97\x97\x56\x85\x22\xdf\x7d\x20\x65\xad\xd9\x90\x21\x7b\xa5\xef\xf9\x9d\xfb\xe7\x58\x45\x81\x4b\x37\x4c\xac\x0f\xbd\xe0\xc7\xf7\x3f\xfc\x8c\xaa\x27\xa8\x3f\x83\x6a\x7a\xa5\x2d\xca\x20\xbd\x63\x9f\x15\x05\xaa\x5e\x7b\x74\xda\x10\xb4\xc7\xa0\x58\xe0\x3a\xc8\x3f\xaa\x8d\xae\x59\xf1\x94\x67\x45\x31\x2b\x5e\xf8\x31\xaa\x3b\x26\x82\x77\x9d\x8c\x8a\xe9\x02\x93\x0b\x68\x94\x05\x53\xab\xbd\xb0\xae\x83\x10\xb4\x40\xd9\xb6\x70\x8c\xa3\x6b\x75\x37\x45\xa0\x16\x04\xdb\x12\x27\x5b\x21\x3e\xfa\xa5\x87\x0f\xdb\x07\xdc\x90\xf7\xc4\xf8\x40\x96\x58\x19\xdc\x87\xda\xe8\x06\x37\xba\x21\xeb\x09\xca\x63\x88\x2f\xbe\xa7\x16\x75\xc2\x45\xe1\x75\x6c\x65\x7f\x6e\x05\xd7\x2e\xd8\x56\x89\x76\x76\x0d\xd2\xd2\x13\xe3\x44\xec\xb5\xb3\xf8\x69\xb1\x3a\x03\xd7\x70\x1c\x21\x6f\x94\xc4\x01\x18\x6e\x88\xba\xb7\x50\x76\x82\x51\xf2\x5d\xfa\xea\x3a\xbe\x4f\xdd\x42\xdb\x64\xd2\xbb\x81\x20\xbd\x92\x38\xf3\xa8\x8d\x41\x4d\x08\x9e\xba\x60\xd6\x91\x55\x07\xc1\xe7\x4d\xf5\xf1\xee\xa1\x42\xb9\x7d\xc4\xe7\x72\xb7\x2b\xb7\xd5\xe3\x2f\x18\xb5\xf4\x2e\x08\xe8\x44\x33\x4a\x1f\x07\xa3\xa9\xc5\xa8\x98\x95\x95\x09\xae\x8b\x84\xdb\xab\xdd\xe5\xc7\x72\x5b\x95\xbf\x6f\x6e\x36\xd5\x23\x1c\xe3\x7a\x53\x6d\xaf\xf6\x7b\x5c\xdf\xed\x50\xe2\xbe\xdc\x55\x9b\xcb\x87\x9b\x72\x87\xfb\x87\xdd\xfd\xdd\xfe\x2a\xc7\x9e\x62\x57\x14\xf5\xaf\x6f\xbc\x4b\xb7\x63\x42\x4b\xa2\xb4\xf1\xcb\x1e\x1e\x5d\x80\xef\x5d\x30\x2d\x7a\x75\x22\x30\x35\xa4\x4f\xd4\x42\xa1\x71\xc3\xf4\xbf\x4f\x1a\x59\xca\x38\x7b\x48\x33\xff\x47\x14\xb1\xe9\x60\x9d\xac\xe1\x89\xf0\x6b\x2f\x32\x5c\x14\xc5\x38\x8e\xf9\xc1\x86\xdc\xf1\xa1\x30\x33\xcc\x17\xbf\xe5\x59\x24\xba\xa1\x71\xc1\x4a\xc5\xaa\x21\x8e\xd7\x51\xf0\xea\x38\x18\x82\xcc\x4f\xe9\x2a\x7f\x04\x2f\x48\x85\x3e\x19\xdb\x70\xac\x89\x63\xeb\xda\x7a\xe1\xd0\xc4\x2c\xa4\xbf\x0d\x7d\xa5\x26\x5d\xb6\x9e\x52\xe5\xd5\xa7\x5b\xd4\xd4\xc5\xbd\xa4\x14\xb3\xb2\x5e\xa5\xf2\x94\x68\x6d\x95\x50\x9b\x67\xdf\xb2\x55\x51\xcc\x0e\xc9\xf8\xcb\xbf\x7d\x22\xe7\xb9\xd7\xdf\x46\x79\xb6\x4a\xb2\x0b\xbc\x5f\x67\x89\xe2\x85\x86\x38\x89\xb6\x27\xf7\x85\xda\x74\x18\x3a\x11\x4f\x69\xd8\xf6\x1c\xb4\x88\xff\x74\xbb\x60\x7c\x9e\xad\xa2\xee\x02\x5d\xb0\xc9\xe1\x8d\x71\x87\x35\xda\xfa\x2d\xbe\x41\x7a\xed\xf3\xe4\xf2\xee\x1d\x9e\xce\x36\x9d\x0a\x46\x9e\xfb\x8c\xfd\x39\x82\xaa\x91\xa0\xcc\x19\x1d\x27\x75\x1d\x94\x5d\xdc\xbb\x39\x1c\xab\xa4\x7f\xd9\x6f\xb1\x60\xf2\x2f\x79\x28\x63\x92\xcf\x0c\xf4\x73\xac\x6a\x22\x0b\x2d\xc4\x71\xa1\x70\x27\xe2\xf8\x41\x01\x93\x04\xb6\x3e\xe1\xa2\xa6\xd3\x56\x99\x05\x7c\x8e\x5e\x5c\xb8\xb6\x87\x3c\x5b\xcd\xef\xcf\x9a\x6a\xe4\xeb\xd2\xd4\x4c\x7a\xb6\x0b\x3c\x65\x4f\xd9\x5f\x01\x00\x00\xff\xff\xd0\x82\x86\xc7\x52\x05\x00\x00")

func opcount_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_opcount_tracerJs,
		"opcount_tracer.js",
	)
}

func opcount_tracerJs() (*asset, error) {
	bytes, err := opcount_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "opcount_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x63, 0xb, 0x78, 0x30, 0x47, 0x49, 0xb7, 0xb9, 0x28, 0x84, 0x1e, 0x2e, 0x3c, 0xc9, 0x72, 0x6b, 0x73, 0xbe, 0x60, 0xc2, 0x81, 0x39, 0x3c, 0xbd, 0x70, 0x65, 0x19, 0x2, 0x6b, 0x8a, 0xfd, 0x3a}}
	return a, nil
}

var _prestate_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\xdd\x6f\xe3\xb8\x11\x7f\x96\xfe\x8a\x69\x5e\x6c\xe3\x7c\x72\xf6\x0a\x1c\x0a\xa7\x29\xa0\xf5\x7a\x77\x0d\xf8\x92\xc0\xf6\x36\x4d\x0f\xf7\x40\x91\x23\x8b\x67\x9a\x54\x49\xca\x1f\x58\xe4\x7f\x2f\x86\xfa\x70\x9c\x4b\x36\xdb\x5e\x9e\x22\x72\xf8\x9b\xef\xdf\x8c\x47\x23\x98\x98\xf2\x68\xe5\xba\xf0\xf0\xd3\xe5\xbb\xbf\xc1\xaa\x40\x60\xff\xa9\x18\x2f\x98\xd4\x90\x56\xbe\x30\xd6\xc5\xa3\x11\xac\x0a\xe9\x20\x97\x0a\x41\x3a\x28\x99\xf5\x60\x72\xf0\x67\xd2\x4a\x66\x96\xd9\x63\x12\x8f\x46\xf5\x8b\x17\x2e\xe9\x75\x6e\x11\xc1\x99\xdc\xef\x99\xc5\x31\x1c\x4d\x05\x9c\x69\xb0\x28\xa4\xf3\x56\x66\x95\x47\x90\x1e\x98\x16\x23\x63\x61\x6b\x84\xcc\x8f\x04\x28\x3d\x54\x5a\xa0\x0d\x6a\x3d\xda\xad\x6b\x6d\xf8\x74\xf3\x05\xe6\xe8\x1c\x5a\xf8\x84\x1a\x2d\x53\x70\x57\x65\x4a\x72\x98\x4b\x8e\xda\x21\x30\x07\x25\x9d\xb8\x02\x05\x64\x01\x8e\x1e\x7e\x24\x53\x96\x8d\x29\xf0\xd1\x54\x5a\x30\x2f\x8d\x1e\x02\x4a\x5f\xa0\x85\x1d\x5a\x27\x8d\x86\xbf\xb6\xaa\x1a\xc0\x21\x18\x4b\x20\x7d\xe6\xc9\x01\x0b\xa6\xa4\x77\x03\x60\xfa\x08\x8a\xf9\xd3\xd3\x37\xc3\x71\xf2\x5a\x80\xd4\x41\x49\x61\x4a\x04\x5f\x30\x4f\x3e\xef\xa5\x52\x90\x21\x54\x0e\xf3\x4a\x0d\x09\x2b\xab\x3c\xdc\xcf\x56\x9f\x6f\xbf\xac\x20\xbd\x79\x80\xfb\x74\xb1\x48\x6f\x56\x0f\x57\xb0\x97\xbe\x30\x95\x07\xdc\x61\x0d\x25\xb7\xa5\x92\x28\x60\xcf\xac\x65\xda\x1f\xc1\xe4\x84\xf0\xcb\x74\x31\xf9\x9c\xde\xac\xd2\xf7\xb3\xf9\x6c\xf5\x00\xc6\xc2\xc7\xd9\xea\x66\xba\x5c\xc2\xc7\xdb\x05\xa4\x70\x97\x2e\x56\xb3\xc9\x97\x79\xba\x80\xbb\x2f\x8b\xbb\xdb\xe5\x34\x81\x25\x92\x55\x48\xef\xdf\x8e\x78\x1e\x72\x67\x11\x04\x7a\x26\x95\x6b\xe3\xf0\x60\x2a\x70\x85\xa9\x94\x80\x82\xed\x10\x2c\x72\x94\x3b\x14\xc0\x80\x9b\xf2\xf8\xdd\x29\x25\x2c\xa6\x8c\x5e\x07\x9f\x5f\x29\x45\x98\xe5\xa0\x8d\x1f\x82\x43\x84\xbf\x17\xde\x97\xe3\xd1\x68\xbf\xdf\x27\x6b\x5d\x25\xc6\xae\x47\xaa\x06\x73\xa3\x7f\x24\x31\x21\x96\x16\x9d\x67\x1e\x57\x96\x71\xb4\x60\x2a\x5f\x56\xde\x81\xab\xf2\x5c\x72\x89\xda\x83\xd4\xb9\xb1\xdb\x50\x25\xe0\x0d\x70\x8b\xcc\x23\x30\x50\x86\x33\x05\x78\x40\x5e\x85\xbb\x3a\xce\xa1\x54\x2d\xd3\x8e\xf1\x70\x9a\x5b\xb3\x25\x4f\x2b\xe7\xe9\x1f\xe7\x70\x9b\x29\x14\xb0\x46\x8d\x4e\x3a\xc8\x94\xe1\x9b\x24\xfe\x1a\x47\x4f\x8c\xa1\x2a\x21\xa0\x56\x28\x54\xc6\x1e\x7b\x16\x21\xab\xa4\x12\x52\xaf\x93\x38\x6a\xa5\xc7\xa0\x2b\xa5\x86\x71\x80\x50\xc6\x6c\xaa\x32\xe5\xdc\x54\xc1\xf6\xdf\x91\xfb\x1a\xcc\x95\xc8\x65\x4e\xa5\xc1\xba\x5b\x6f\xc2\x55\xa7\xd7\x64\x24\x9f\xc4\xd1\x19\xcc\x18\xf2\x4a\x07\x77\xfa\x4c\x08\x3b\x04\x91\x0d\xbe\xc6\x51\xb4\x63\x96\xb0\xe0\x1a\xbc\xf9\x8c\x87\x70\x39\xb8\x8a\xa3\x48\xe6\xd0\xf7\x85\x74\x49\x0b\xfc\x2b\xe3\xfc\x37\xb8\xbe\xbe\x0e\x0d\x9d\x4b\x8d\x62\x00\x04\x11\xbd\x24\x56\xdf\x44\x19\x53\x4c\x73\x1c\x43\xef\xf2\xd0\x83\x1f\x40\x64\xc9\x1a\xfd\xfb\xfa\xb4\x56\x96\x78\xb3\xf4\x56\xea\x75\xff\xdd\xcf\x83\x61\x78\xa5\x4d\x78\x03\x8d\xf8\x8d\xe9\x84\xeb\x7b\x6e\x44\xb8\x6e\x6c\xae\xa5\x26\x46\x34\x42\x8d\x94\xf3\xc6\xb2\x35\x8e\xe1\xeb\x23\x7d\x3f\x92\x57\x8f\x71\xf4\x78\x16\xe5\x65\x2d\xf4\x4a\x94\x1b\x08\x40\xed\x6d\x57\xe5\x6b\x49\x7d\xfa\x34\x01\x01\xef\x5b\x49\x58\xb6\xa6\x3c\x4b\xc2\x06\x8f\x6f\x67\x82\x2e\xa4\x38\x74\x17\x1b\x3c\x0e\xae\xe2\x57\x53\x94\x34\x46\xff\x2a\xc5\xe1\xe5\x7c\x11\xe0\x8e\xa9\x0e\xb0\x8e\xdf\x92\x10\x4e\x76\x0d\x82\xee\xa0\x83\x64\xff\x72\x0d\x17\x97\x87\xcb\x3f\xf9\x77\xd1\x58\xf0\x42\xc9\x3c\x33\xfb\x3b\x4c\x7b\x3c\xcf\xa7\x45\x57\x29\x4f\x6d\x27\xf5\xce\x6c\x88\x3e\x0b\xca\x93\x52\x21\x35\xa6\xa4\xaa\x71\x35\x7f\x65\x88\x1a\xa4\x47\xcb\x88\xc0\xcd\x0e\x2d\x4d\x2e\xb0\xe8\x2b\xab\x5d\x97\xce\x5c\x6a\xa6\x5a\xe0\x26\xfb\xde\x32\x5e\xf7\x6e\x7d\xfe\x24\xa7\xdc\x1f\x42\x36\x83\x8f\xa3\x11\xa4\x1e\xc8\x4f\x28\x8d\xd4\x7e\x08\x7b\x04\x8d\x28\x88\x80\x04\x8a\x8a\xfb\x80\xd7\xdb\x31\x55\x61\xaf\x26\x19\x22\xea\xf0\xd4\x54\x34\x8d\x9e\x90\xd0\x30\x18\xb8\x35\xbb\x30\x66\x33\xc6\x37\xd0\x34\xbe\xb1\x72\x2d\x75\xdc\xc4\xf4\xac\xe9\xc9\xa2\x84\x80\x83\x59\xa1\x66\x28\xf7\x74\xf2\x3e\xe4\x3f\x93\xeb\x99\xf6\xcf\x8a\xa8\x8e\x7c\xfb\x74\xf0\x5b\xd2\x34\x71\xe2\x88\x78\xfb\x3f\x0d\x86\xf0\xee\xe7\xae\x32\xbd\x21\x28\x78\x1b\xcc\x9b\xd7\xa1\xe2\xe7\x15\xf1\xf2\xb3\xa0\x86\x98\xe4\x87\xa0\x35\x71\x55\x46\xe9\xa8\xfd\x0c\x71\x3c\x67\x93\xab\x6f\xe0\x9e\xfb\xd6\xe2\x36\xa1\x49\x98\x10\xaf\x83\xd6\x29\xfa\x80\xdc\xe2\x96\xa6\x0b\x65\x81\x33\xa5\xd0\xf6\x1c\x04\xee\x1a\x36\xe5\x14\xf2\x85\xdb\xd2\x1f\xdb\x99\xe3\x99\x5d\xa3\x77\x6f\x1b\x16\x70\x7e\xfc\xb1\xa5\xe2\x10\x8a\x63\x89\x70\x7d\x0d\xbd\xc9\x62\x9a\xae\xa6\xbd\xa6\x99\x46\x23\xb8\xc7\xb0\x8d\x65\x4a\x66\x42\x1d\x41\xa0\x42\x8f\xb5\x5d\x46\x87\x10\x75\xd4\x34\xa4\xb5\x8a\x16\x1e\x3c\x48\xe7\xa5\x5e\x43\xcd\x58\x7b\x9a\xee\x0d\x5c\xe8\x11\xce\x2a\x47\xd5\xfa\x6c\x18\x7a\x43\x7b\x8d\x45\xe2\x37\x9a\x43\xa1\xdd\x98\x92\xdd\x1e\x94\x4b\xeb\x3c\x94\x8a\x71\x4c\x08\xaf\x33\xe6\xf5\xfc\x36\xcc\x4c\xaa\x17\xa1\x05\xeb\xcd\xa0\x1b\xb4\x4c\xd1\xa0\x26\xf5\x0e\xfa\x2d\xc6\x20\x8e\x22\xdb\x4a\x3f\xc1\xbe\x3a\x51\x82\xf3\x58\x3e\x25\x04\x5a\x6f\x70\x87\x44\xe5\x81\x0d\xea\xa1\x4c\xba\xfe\xf9\x4b\xb3\x05\xa0\x4b\xe2\x88\xde\x3d\xe9\x6b\x65\xd6\xe7\x7d\x2d\xea\xb0\xf0\xca\x5a\xca\x7f\x37\x0a\x72\xea\xf1\xdf\x2b\xe7\x29\xa6\x96\xc2\xd3\xb0\xc5\x4b\x64\x1d\xa8\x99\xa6\xfe\xe0\x8f\x43\x94\xe6\x67\x98\x57\xa4\xae\x99\x96\xf5\x4e\x59\x1a\x8f\xda\x4b\xa6\xd4\x91\xf2\xb0\xb7\xb4\x4c\x15\x68\x71\x08\x4e\x92\x54\x60\x9c\x20\x2a\x35\x57\x95\xa8\xcb\x20\xd4\x71\x83\xe7\x82\xcd\xe7\x5b\xd8\x16\x9d\x63\x6b\x4c\xa8\x92\x72\x79\x68\xf6\x58\x0d\xbd\x9a\xe4\xfa\x83\x5e\xd2\x19\x79\x4e\x31\xca\xac\x93\xb6\xc8\x88\xab\x53\x21\x2c\x3a\xd7\x1f\x34\x9c\xd3\x65\xf6\xbe\x40\x4d\xc1\x07\x8d\x7b\xe8\x56\x24\xc6\x39\x2d\x8c\x62\x08\x4c\x08\xa2\xb6\x67\xeb\x4c\x1c\x45\x6e\x2f\x3d\x2f\x20\x68\x32\xe5\xa9\x17\x07\x4d\xfd\x73\xe6\x10\x2e\xa6\xff\x5a\x4d\x6e\x3f\x4c\x27\xb7\x77\x0f\x17\x63\x38\x3b\x5b\xce\xfe\x3d\xed\xce\xde\xa7\xf3\xf4\x66\x32\xbd\x18\x9f\xe6\xd0\xb9\x43\xde\xb4\x2e\x90\x42\xe7\x19\xdf\x24\x25\xe2\xa6\x7f\x79\xce\x03\x27\x07\xa3\x28\xb3\xc8\x36\x57\x27\x63\xea\x06\x6d\x74\xb4\x94\x0b\xd7\xf0\x6a\xb0\xae\x5e\xb7\x66\xd2\xc8\xf7\x5b\x22\x3f\xad\x44\x81\x2a\xbe\x69\x47\x3a\x9f\x77\x9e\xd3\x07\x85\xa3\x3b\xf8\x30\x9d\x4f\x3f\xa5\xab\xe9\x99\xd4\x72\x95\xae\x66\x93\xfa\xe8\x7f\x0e\xd1\xbb\xef\x0e\x51\x6f\xb9\x5c\xdd\x2e\xa6\xbd\x71\xf3\x35\xbf\x4d\x3f\xf4\xfe\xa0\xb0\xd9\x9b\xbe\x55\x64\xde\xdc\x1b\x2b\xfe\x9f\x5c\x3d\xd9\x1d\x72\xf6\xd2\xea\x10\x48\x88\xfb\xea\xd9\x4f\x04\x60\xba\xe5\x8f\xbc\xfe\x91\x14\x85\xf7\x2f\x32\xc6\x63\xfc\x18\xff\x37\x00\x00\xff\xff\x07\x19\xe6\x2e\xb2\x0f\x00\x00")

func prestate_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_prestate_tracerJs,
		"prestate_tracer.js",
	)
}

func prestate_tracerJs() (*asset, error) {
	bytes, err := prestate_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prestate_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0xf6, 0x34, 0x61, 0xbd, 0x1e, 0x39, 0xb5, 0x10, 0x59, 0x91, 0xe6, 0x39, 0x3c, 0x6c, 0x6f, 0xe8, 0xd9, 0x1d, 0x3d, 0xb0, 0xf2, 0x2d, 0x29, 0xc5, 0x90, 0x40, 0x9, 0xcf, 0x96, 0x8c, 0xf1}}
	return a, nil
}

var _trigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4f\x6f\xe3\x36\x10\xc5\xef\xfe\x14\xaf\x27\x27\x88\x6b\x25\xed\xa5\x70\xea\x02\x6e\x36\xd9\x35\x90\xb5\x03\x5b\xe9\x22\x08\x72\xa0\xa5\x91\x44\x84\x26\x55\x72\x68\xaf\x10\xe4\xbb\x17\xd4\x1f\xff\x09\xdc\x6e\x7d\x32\x38\xf3\x7e\xf3\x66\x38\x62\x14\xe1\xc6\x94\x95\x95\x79\xc1\xf8\xe5\xf2\xea\x37\xc4\x05\x41\xfc\xed\x45\x52\x08\xa9\x31\xf1\x5c\x18\xeb\x7a\x51\x84\xb8\x90\x0e\x99\x54\x04\xe9\x50\x0a\xcb\x30\x19\xf8\x28\x5b\xc9\x95\x15\xb6\x1a\xf6\xa2\xa8\x51\x9c\x08\x06\x75\x66\x89\xe0\x4c\xc6\x5b\x61\x69\x84\xca\x78\x24\x42\xc3\x52\x2a\x1d\x5b\xb9\xf2\x4c\x90\x0c\xa1\xd3\xc8\x58\xac\x4d\x2a\xb3\x2a\x00\x25\xc3\xeb\x94\x6c\x5d\x96\xc9\xae\x5d\xe7\xe1\xf3\xec\x11\xf7\xe4\x1c\x59\x7c\x26\x4d\x56\x28\x3c\xf8\x95\x92\x09\xee\x65\x42\xda\x11\x84\x43\x19\x4e\x5c\x41\x29\x56\x35\x2e\x08\xef\x82\x95\x65\x6b\x05\x77\xc6\xeb\x54\xb0\x34\x7a\x00\x92\x5c\x90\xc5\x86\xac\x93\x46\xe3\xd7\xae\x54\x0b\x1c\xc0\xd8\x00\x39\x13\x1c\x1a\xb0\x30\x65\xd0\x9d\x43\xe8\x0a\x4a\xf0\x5e\xfa\xc3\x71\xec\xbb\x4e\x21\x75\x5d\xa4\x30\x25\x81\x0b\xc1\xa1\xe7\xad\x54\x0a\x2b\x82\x77\x94\x79\x35\x08\xac\x95\x67\x7c\x9b\xc6\x5f\xe6\x8f\x31\x26\xb3\x27\x7c\x9b\x2c\x16\x93\x59\xfc\x74\x8d\xad\xe4\xc2\x78\x06\x6d\xa8\x41\xc9\x75\xa9\x24\xa5\xd8\x0a\x6b\x85\xe6\x0a\x26\x0b\x84\xaf\xb7\x8b\x9b\x2f\x93\x59\x3c\xf9\x73\x7a\x3f\x8d\x9f\x60\x2c\xee\xa6\xf1\xec\x76\xb9\xc4\xdd\x7c\x81\x09\x1e\x26\x8b\x78\x7a\xf3\x78\x3f\x59\xe0\xe1\x71\xf1\x30\x5f\xde\x0e\xb1\xa4\xe0\x8a\x82\xfe\xc7\x13\xcf\xea\xbb\xb3\x84\x94\x58\x48\xe5\xba\x39\x3c\x19\x0f\x57\x18\xaf\x52\x14\x62\x43\xb0\x94\x90\xdc\x50\x0a\x81\xc4\x94\xd5\xff\xbe\xd2\xc0\x12\xca\xe8\xbc\xee\xf9\x5f\x56\x11\xd3\x0c\xda\xf0\x00\x8e\x08\xbf\x17\xcc\xe5\x28\x8a\xb6\xdb\xed\x30\xd7\x7e\x68\x6c\x1e\xa9\x06\xe6\xa2\x3f\x86\xbd\xde\x5b\x0f\x00\xa2\x08\x85\x74\x1c\xae\x26\x40\xd7\xa2\xac\x3d\x59\x99\x5b\xb1\x46\x62\xbc\x66\xb2\xae\x4e\x0d\x79\x23\xbc\xbd\x0f\x3a\xa1\x12\x8e\xe7\x65\x90\x86\x7f\x30\x25\xd9\x7a\x9f\xea\x78\x13\x74\x23\x3c\xf7\xfb\x83\x7e\xff\x65\xb0\x3b\xfd\x44\x25\x17\x23\x5c\x36\x27\x2d\xcb\x31\xd5\x24\xa9\x37\xe6\x95\xd2\x7a\xa0\xb4\x21\x5b\xc1\x94\x89\x49\xdb\x05\x09\x16\xff\xfa\x0a\xfa\x4e\x89\x67\x72\xc3\x9a\x10\xa4\x23\x64\x5e\x27\xa1\xf8\x99\x32\xf9\x00\xe9\xea\x1c\x6f\x3b\xfe\x46\x58\xa4\xa1\x2a\xc6\x50\x26\x1f\xe6\xd4\x98\x38\x3b\xbf\xde\xe5\xc8\x0c\x67\x4d\xce\x4f\x63\x70\x21\xdd\x70\xe7\xf5\x7c\x4f\x0a\xbf\x5d\x70\x5e\x3a\x8c\xbb\xfe\xae\x4f\xe7\x7c\x6a\xcb\xd6\xe8\xe3\x1c\x4b\xec\xad\xde\x9f\xbd\x1f\xf9\x35\x65\x6b\xd6\x94\x43\x36\x4b\xb6\x52\xe7\x87\x7e\x43\xce\x2b\x55\x18\x1f\xf9\x79\xbe\x7c\xb9\xe8\xff\xdc\xbf\x38\x3a\xbb\x6a\xce\x4c\x79\xdc\x6d\x9d\x13\x2e\xf5\xf9\x95\xaa\x97\x53\x4d\xee\x82\x17\x17\xa7\x6c\x92\x72\x84\xff\x92\x61\x8c\xab\x53\xc2\x0f\x8e\x3f\xf6\x70\x75\x30\xcc\x0f\x01\x8c\xd1\xb5\xb1\xdf\xc3\x4c\x78\xc5\x87\xcb\xb3\x2d\xda\xf7\x40\x24\xec\x85\x6a\xf7\x25\xbc\x6c\x26\x83\xd0\xdd\x4a\x65\xcd\x97\x1a\x28\x35\xe2\xe4\x12\xed\xcb\x58\x72\xa7\xea\x08\xa5\xea\x5a\x0d\xd4\x35\xdf\xf9\x8a\x48\x43\x72\xf8\x20\x28\x85\xd9\x90\x0d\x2f\x7c\x7b\xe5\xae\x23\x06\x59\x26\xb5\x50\x1d\xbb\x7d\x0e\xd8\x8a\x44\xea\xbc\xb1\xd6\x84\x0e\xbc\x25\xfc\xfd\x70\xb9\x1b\xe6\x7e\xf2\xbb\xe9\xbc\xf7\xfe\x09\x00\x00\xff\xff\x6f\x58\xe9\x14\xf2\x06\x00\x00")

func trigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_trigram_tracerJs,
		"trigram_tracer.js",
	)
}

func trigram_tracerJs() (*asset, error) {
	bytes, err := trigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd8, 0x76, 0xc5, 0x24, 0xc3, 0x9f, 0x76, 0x29, 0xef, 0x59, 0xd2, 0x20, 0x2e, 0x52, 0x4a, 0xd4, 0x89, 0xc0, 0xdb, 0xb0, 0x3f, 0x94, 0x3, 0x71, 0x7, 0x99, 0x3e, 0x89, 0x52, 0xd8, 0x74, 0x33}}
	return a, nil
}

var _unigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xd1\x6e\xdb\x46\x10\x7c\xd7\x57\xcc\xa3\x8c\x08\xa2\xd3\xbe\x14\x4a\x13\x40\x35\xec\x44\x80\x23\x1b\x12\xdd\xc0\x28\xfa\x70\x24\x97\xe2\xa1\xa7\x5b\x76\x6f\x4f\x8a\x10\xe8\xdf\x8b\x23\x45\xcb\x09\xdc\xba\x7c\x12\xb4\x3b\x33\xbb\xb3\x43\x66\x19\xae\xb8\x3d\x88\xdd\x34\x8a\x9f\x2e\xdf\xfe\x82\xbc\x21\x98\xbf\xa3\x29\x1b\x63\x3d\xe6\x51\x1b\x96\x30\xca\x32\xe4\x8d\x0d\xa8\xad\x23\xd8\x80\xd6\x88\x82\x6b\xe8\x77\xdd\xce\x16\x62\xe4\x30\x1d\x65\x59\x8f\x78\xa1\x98\xd0\xb5\x10\x21\x70\xad\x7b\x23\x34\xc3\x81\x23\x4a\xe3\x21\x54\xd9\xa0\x62\x8b\xa8\x04\xab\x30\xbe\xca\x58\xb0\xe5\xca\xd6\x87\x44\x68\x15\xd1\x57\x24\x9d\xac\x92\x6c\xc3\x30\xc3\xc7\xe5\x03\x6e\x29\x04\x12\x7c\x24\x4f\x62\x1c\xee\x63\xe1\x6c\x89\x5b\x5b\x92\x0f\x04\x13\xd0\xa6\x7f\x42\x43\x15\x8a\x8e\x2e\x01\x6f\xd2\x28\xeb\xd3\x28\xb8\xe1\xe8\x2b\xa3\x96\xfd\x04\x64\xb5\x21\xc1\x8e\x24\x58\xf6\xf8\x79\x90\x3a\x11\x4e\xc0\x92\x48\xc6\x46\xd3\x02\x02\x6e\x13\xee\x02\xc6\x1f\xe0\x8c\x9e\xa1\xaf\xda\x71\xde\xba\x82\xf5\x9d\x48\xc3\x2d\x41\x1b\xa3\x69\xe7\xbd\x75\x0e\x05\x21\x06\xaa\xa3\x9b\x24\xae\x22\x2a\xbe\x2c\xf2\x4f\x77\x0f\x39\xe6\xcb\x47\x7c\x99\xaf\x56\xf3\x65\xfe\xf8\x0e\x7b\xab\x0d\x47\x05\xed\xa8\xa7\xb2\xdb\xd6\x59\xaa\xb0\x37\x22\xc6\xeb\x01\x5c\x27\x86\xcf\xd7\xab\xab\x4f\xf3\x65\x3e\xff\x6d\x71\xbb\xc8\x1f\xc1\x82\x9b\x45\xbe\xbc\x5e\xaf\x71\x73\xb7\xc2\x1c\xf7\xf3\x55\xbe\xb8\x7a\xb8\x9d\xaf\x70\xff\xb0\xba\xbf\x5b\x5f\x4f\xb1\xa6\x34\x15\x25\xfc\xeb\x8e\xd7\xdd\xed\x84\x50\x91\x1a\xeb\xc2\xe0\xc3\x23\x47\x84\x86\xa3\xab\xd0\x98\x1d\x41\xa8\x24\xbb\xa3\x0a\x06\x25\xb7\x87\xff\x7d\xd2\xc4\x65\x1c\xfb\x4d\xb7\xf3\xbf\x44\x11\x8b\x1a\x9e\x75\x82\x40\x84\x5f\x1b\xd5\x76\x96\x65\xfb\xfd\x7e\xba\xf1\x71\xca\xb2\xc9\x5c\x4f\x16\xb2\x0f\xd3\xd1\xe8\xdb\x08\x00\xb2\x0c\x8d\x0d\x9a\x4e\x93\x48\xb7\xa6\x4d\x33\x71\x5b\x72\x45\x01\xca\x28\x39\x7a\x25\x09\x5d\x77\x6a\x9d\xe1\xdb\x71\x32\x60\x3d\xb7\xa1\x6f\x09\xf0\x71\x5b\x90\xf4\xf0\xbe\x3d\x55\x67\xb8\x7c\xea\x0e\x4a\x6d\x52\xb2\x7e\xc7\x7f\x51\xd5\xb9\x46\x3b\x92\xc3\x49\xb0\x4f\x41\x9a\xe3\xf7\xcf\xa0\xaf\x54\x46\xa5\x30\xed\xd0\x09\x3a\x43\x1d\x7d\x99\x92\x37\x76\xbc\x99\xa0\x2a\x2e\xd0\x6f\x91\x9e\x9d\x49\xb9\xc4\x7b\x38\xde\x4c\xb9\x9d\x2a\xaf\x55\xac\xdf\x8c\x2f\xde\x3d\xf5\xd8\x1a\x63\x6d\x6c\x98\xa6\x45\xfe\xe0\xf6\xcf\x8b\x33\x3e\x3d\xdf\xd5\xde\xbc\x39\x03\x8f\x4f\xbf\xc8\x05\xc2\x7f\xa0\xf0\x1e\x6f\x5f\xc2\x75\x4d\xc9\x90\x81\xf6\x6c\x62\x6d\xa2\xd3\xe7\xbe\xec\x9b\x53\x9e\x4d\xa9\xd1\xb8\x93\x15\xe9\xcd\xe4\x1a\xc6\x0f\x6e\xd5\x7d\xd2\x12\x4b\x47\xf1\xa2\x3f\xc7\xc9\x68\xd0\x11\x0a\x2f\x09\x19\xe7\x3a\xb1\xe1\xe8\x5d\x50\x0b\x22\x0f\xab\x24\x26\xbd\xa9\xbc\x23\x49\x9f\x28\x08\x69\x14\x1f\x06\xc6\x04\xab\xad\x37\x6e\xe0\x3e\xe5\x59\xc5\x94\xd6\x6f\xfa\xd9\xfa\xd2\xb3\xe1\x4a\xfd\xfa\xfc\x70\xb6\x1e\x3f\x99\x83\x0f\xb8\xfc\xe1\x26\xbd\xe4\xd9\xe4\x1f\xcd\x3d\x4e\x46\xc7\xd1\x3f\x01\x00\x00\xff\xff\x5d\x2c\xe9\xa6\xdc\x05\x00\x00")

func unigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_unigram_tracerJs,
		"unigram_tracer.js",
	)
}

func unigram_tracerJs() (*asset, error) {
	bytes, err := unigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "unigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0x6d, 0x35, 0x52, 0x46, 0x97, 0xbd, 0xc1, 0xb0, 0xa8, 0xa3, 0x16, 0x4d, 0xaa, 0xe4, 0x95, 0xc, 0x23, 0x2d, 0xa6, 0x5c, 0x5d, 0x22, 0xbc, 0xd4, 0xf2, 0x86, 0x8f, 0x6, 0xca, 0xdd, 0x6d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"4byte_tracer.js":    _4byte_tracerJs,
	"bigram_tracer.js":   bigram_tracerJs,
	"call_tracer.js":     call_tracerJs,
	"evmdis_tracer.js":   evmdis_tracerJs,
	"noop_tracer.js":     noop_tracerJs,
	"opcount_tracer.js":  opcount_tracerJs,
	"prestate_tracer.js": prestate_tracerJs,
	"trigram_tracer.js":  trigram_tracerJs,
	"unigram_tracer.js":  unigram_tracerJs,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"4byte_tracer.js":    {_4byte_tracerJs, map[string]*bintree{}},
	"bigram_tracer.js":   {bigram_tracerJs, map[string]*bintree{}},
	"call_tracer.js":     {call_tracerJs, map[string]*bintree{}},
	"evmdis_tracer.js":   {evmdis_tracerJs, map[string]*bintree{}},
	"noop_tracer.js":     {noop_tracerJs, map[string]*bintree{}},
	"opcount_tracer.js":  {opcount_tracerJs, map[string]*bintree{}},
	"prestate_tracer.js": {prestate_tracerJs, map[string]*bintree{}},
	"trigram_tracer.js":  {trigram_tracerJs, map[string]*bintree{}},
	"unigram_tracer.js":  {unigram_tracerJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
